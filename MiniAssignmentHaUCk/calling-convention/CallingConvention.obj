
/home/hawkinsw/code/uc/CS5138/MiniAssignmentHaUCk/calling-convention/build/CallingConvention:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400318 <.interp>:
  400318:	2f                   	(bad)  
  400319:	6c                   	ins    BYTE PTR es:[rdi],dx
  40031a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400326:	78 2d                	js     400355 <__abi_tag-0x47>
  400328:	78 38                	js     400362 <__abi_tag-0x3a>
  40032a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000400338 <.note.gnu.property>:
  400338:	04 00                	add    al,0x0
  40033a:	00 00                	add    BYTE PTR [rax],al
  40033c:	30 00                	xor    BYTE PTR [rax],al
  40033e:	00 00                	add    BYTE PTR [rax],al
  400340:	05 00 00 00 47       	add    eax,0x47000000
  400345:	4e 55                	rex.WRX push rbp
  400347:	00 02                	add    BYTE PTR [rdx],al
  400349:	80 00 c0             	add    BYTE PTR [rax],0xc0
  40034c:	04 00                	add    al,0x0
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	01 00                	add    DWORD PTR [rax],eax
  400352:	00 00                	add    BYTE PTR [rax],al
  400354:	00 00                	add    BYTE PTR [rax],al
  400356:	00 00                	add    BYTE PTR [rax],al
  400358:	01 00                	add    DWORD PTR [rax],eax
  40035a:	01 c0                	add    eax,eax
  40035c:	04 00                	add    al,0x0
  40035e:	00 00                	add    BYTE PTR [rax],al
  400360:	01 00                	add    DWORD PTR [rax],eax
  400362:	00 00                	add    BYTE PTR [rax],al
  400364:	00 00                	add    BYTE PTR [rax],al
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	02 00                	add    al,BYTE PTR [rax]
  40036a:	01 c0                	add    eax,eax
  40036c:	04 00                	add    al,0x0
	...

Disassembly of section .note.gnu.build-id:

0000000000400378 <.note.gnu.build-id>:
  400378:	04 00                	add    al,0x0
  40037a:	00 00                	add    BYTE PTR [rax],al
  40037c:	14 00                	adc    al,0x0
  40037e:	00 00                	add    BYTE PTR [rax],al
  400380:	03 00                	add    eax,DWORD PTR [rax]
  400382:	00 00                	add    BYTE PTR [rax],al
  400384:	47                   	rex.RXB
  400385:	4e 55                	rex.WRX push rbp
  400387:	00 5a dd             	add    BYTE PTR [rdx-0x23],bl
  40038a:	34 e5                	xor    al,0xe5
  40038c:	6d                   	ins    DWORD PTR es:[rdi],dx
  40038d:	fd                   	std    
  40038e:	22 b1 f4 d4 f3 7f    	and    dh,BYTE PTR [rcx+0x7ff3d4f4]
  400394:	af                   	scas   eax,DWORD PTR es:[rdi]
  400395:	c2 2c 7a             	ret    0x7a2c
  400398:	93                   	xchg   ebx,eax
  400399:	46 75 4f             	rex.RX jne 4003eb <__abi_tag+0x4f>

Disassembly of section .note.ABI-tag:

000000000040039c <__abi_tag>:
  40039c:	04 00                	add    al,0x0
  40039e:	00 00                	add    BYTE PTR [rax],al
  4003a0:	10 00                	adc    BYTE PTR [rax],al
  4003a2:	00 00                	add    BYTE PTR [rax],al
  4003a4:	01 00                	add    DWORD PTR [rax],eax
  4003a6:	00 00                	add    BYTE PTR [rax],al
  4003a8:	47                   	rex.RXB
  4003a9:	4e 55                	rex.WRX push rbp
  4003ab:	00 00                	add    BYTE PTR [rax],al
  4003ad:	00 00                	add    BYTE PTR [rax],al
  4003af:	00 03                	add    BYTE PTR [rbx],al
  4003b1:	00 00                	add    BYTE PTR [rax],al
  4003b3:	00 02                	add    BYTE PTR [rdx],al
  4003b5:	00 00                	add    BYTE PTR [rax],al
  4003b7:	00 00                	add    BYTE PTR [rax],al
  4003b9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000004003c0 <.gnu.hash>:
  4003c0:	01 00                	add    DWORD PTR [rax],eax
  4003c2:	00 00                	add    BYTE PTR [rax],al
  4003c4:	01 00                	add    DWORD PTR [rax],eax
  4003c6:	00 00                	add    BYTE PTR [rax],al
  4003c8:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004003e0 <.dynsym>:
	...
  4003f8:	01 00                	add    DWORD PTR [rax],eax
  4003fa:	00 00                	add    BYTE PTR [rax],al
  4003fc:	12 00                	adc    al,BYTE PTR [rax]
	...
  40040e:	00 00                	add    BYTE PTR [rax],al
  400410:	13 00                	adc    eax,DWORD PTR [rax]
  400412:	00 00                	add    BYTE PTR [rax],al
  400414:	12 00                	adc    al,BYTE PTR [rax]
	...
  400426:	00 00                	add    BYTE PTR [rax],al
  400428:	3b 00                	cmp    eax,DWORD PTR [rax]
  40042a:	00 00                	add    BYTE PTR [rax],al
  40042c:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400440 <.dynstr>:
  400440:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  400443:	6c                   	ins    BYTE PTR es:[rdi],dx
  400444:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  40044b:	72 74                	jb     4004c1 <__abi_tag+0x125>
  40044d:	5f                   	pop    rdi
  40044e:	6d                   	ins    DWORD PTR es:[rdi],dx
  40044f:	61                   	(bad)  
  400450:	69 6e 00 70 72 69 6e 	imul   ebp,DWORD PTR [rsi+0x0],0x6e697270
  400457:	74 66                	je     4004bf <__abi_tag+0x123>
  400459:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40045d:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40045f:	73 6f                	jae    4004d0 <__abi_tag+0x134>
  400461:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
  400466:	49                   	rex.WB
  400467:	42                   	rex.X
  400468:	43 5f                	rex.XB pop r15
  40046a:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046c:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046e:	35 00 47 4c 49       	xor    eax,0x494c4700
  400473:	42                   	rex.X
  400474:	43 5f                	rex.XB pop r15
  400476:	32 2e                	xor    ch,BYTE PTR [rsi]
  400478:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
  40047b:	5f                   	pop    rdi
  40047c:	5f                   	pop    rdi
  40047d:	67 6d                	ins    DWORD PTR es:[edi],dx
  40047f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400480:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400481:	5f                   	pop    rdi
  400482:	73 74                	jae    4004f8 <__abi_tag+0x15c>
  400484:	61                   	(bad)  
  400485:	72 74                	jb     4004fb <__abi_tag+0x15f>
  400487:	5f                   	pop    rdi
  400488:	5f                   	pop    rdi
	...

Disassembly of section .gnu.version:

000000000040048a <.gnu.version>:
  40048a:	00 00                	add    BYTE PTR [rax],al
  40048c:	02 00                	add    al,BYTE PTR [rax]
  40048e:	03 00                	add    eax,DWORD PTR [rax]
  400490:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000400498 <.gnu.version_r>:
  400498:	01 00                	add    DWORD PTR [rax],eax
  40049a:	02 00                	add    al,BYTE PTR [rax]
  40049c:	1a 00                	sbb    al,BYTE PTR [rax]
  40049e:	00 00                	add    BYTE PTR [rax],al
  4004a0:	10 00                	adc    BYTE PTR [rax],al
  4004a2:	00 00                	add    BYTE PTR [rax],al
  4004a4:	00 00                	add    BYTE PTR [rax],al
  4004a6:	00 00                	add    BYTE PTR [rax],al
  4004a8:	75 1a                	jne    4004c4 <__abi_tag+0x128>
  4004aa:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
  4004b0:	24 00                	and    al,0x0
  4004b2:	00 00                	add    BYTE PTR [rax],al
  4004b4:	10 00                	adc    BYTE PTR [rax],al
  4004b6:	00 00                	add    BYTE PTR [rax],al
  4004b8:	b4 91                	mov    ah,0x91
  4004ba:	96                   	xchg   esi,eax
  4004bb:	06                   	(bad)  
  4004bc:	00 00                	add    BYTE PTR [rax],al
  4004be:	02 00                	add    al,BYTE PTR [rax]
  4004c0:	30 00                	xor    BYTE PTR [rax],al
  4004c2:	00 00                	add    BYTE PTR [rax],al
  4004c4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004004c8 <.rela.dyn>:
  4004c8:	f0 3f                	lock (bad) 
  4004ca:	40 00 00             	rex add BYTE PTR [rax],al
  4004cd:	00 00                	add    BYTE PTR [rax],al
  4004cf:	00 06                	add    BYTE PTR [rsi],al
  4004d1:	00 00                	add    BYTE PTR [rax],al
  4004d3:	00 01                	add    BYTE PTR [rcx],al
	...
  4004dd:	00 00                	add    BYTE PTR [rax],al
  4004df:	00 f8                	add    al,bh
  4004e1:	3f                   	(bad)  
  4004e2:	40 00 00             	rex add BYTE PTR [rax],al
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 06                	add    BYTE PTR [rsi],al
  4004e9:	00 00                	add    BYTE PTR [rax],al
  4004eb:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .rela.plt:

00000000004004f8 <.rela.plt>:
  4004f8:	18 40 40             	sbb    BYTE PTR [rax+0x40],al
  4004fb:	00 00                	add    BYTE PTR [rax],al
  4004fd:	00 00                	add    BYTE PTR [rax],al
  4004ff:	00 07                	add    BYTE PTR [rdi],al
  400501:	00 00                	add    BYTE PTR [rax],al
  400503:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    rsp,0x8
  401008:	48 8b 05 e9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__@Base>
  40100f:	48 85 c0             	test   rax,rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	call   rax
  401016:	48 83 c4 08          	add    rsp,0x8
  40101a:	c3                   	ret    

Disassembly of section .plt:

0000000000401020 <printf@plt-0x10>:
  401020:	ff 35 e2 2f 00 00    	push   QWORD PTR [rip+0x2fe2]        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401030 <printf@plt>:
  401030:	ff 25 e2 2f 00 00    	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <printf@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	push   0x0
  40103b:	e9 e0 ff ff ff       	jmp    401020 <_init+0x20>

Disassembly of section .text:

0000000000401040 <_start>:
  401040:	f3 0f 1e fa          	endbr64 
  401044:	31 ed                	xor    ebp,ebp
  401046:	49 89 d1             	mov    r9,rdx
  401049:	5e                   	pop    rsi
  40104a:	48 89 e2             	mov    rdx,rsp
  40104d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  401051:	50                   	push   rax
  401052:	54                   	push   rsp
  401053:	45 31 c0             	xor    r8d,r8d
  401056:	31 c9                	xor    ecx,ecx
  401058:	48 c7 c7 54 11 40 00 	mov    rdi,0x401154
  40105f:	ff 15 8b 2f 00 00    	call   QWORD PTR [rip+0x2f8b]        # 403ff0 <__libc_start_main@GLIBC_2.34>
  401065:	f4                   	hlt    

0000000000401066 <.annobin_abi_note.c>:
  401066:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40106d:	00 00 00 

0000000000401070 <_dl_relocate_static_pie>:
  401070:	f3 0f 1e fa          	endbr64 
  401074:	c3                   	ret    

0000000000401075 <.annobin__dl_relocate_static_pie.end>:
  401075:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40107c:	00 00 00 
  40107f:	90                   	nop

0000000000401080 <deregister_tm_clones>:
  401080:	b8 28 40 40 00       	mov    eax,0x404028
  401085:	48 3d 28 40 40 00    	cmp    rax,0x404028
  40108b:	74 13                	je     4010a0 <deregister_tm_clones+0x20>
  40108d:	b8 00 00 00 00       	mov    eax,0x0
  401092:	48 85 c0             	test   rax,rax
  401095:	74 09                	je     4010a0 <deregister_tm_clones+0x20>
  401097:	bf 28 40 40 00       	mov    edi,0x404028
  40109c:	ff e0                	jmp    rax
  40109e:	66 90                	xchg   ax,ax
  4010a0:	c3                   	ret    
  4010a1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  4010a8:	00 00 00 00 
  4010ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004010b0 <register_tm_clones>:
  4010b0:	be 28 40 40 00       	mov    esi,0x404028
  4010b5:	48 81 ee 28 40 40 00 	sub    rsi,0x404028
  4010bc:	48 89 f0             	mov    rax,rsi
  4010bf:	48 c1 ee 3f          	shr    rsi,0x3f
  4010c3:	48 c1 f8 03          	sar    rax,0x3
  4010c7:	48 01 c6             	add    rsi,rax
  4010ca:	48 d1 fe             	sar    rsi,1
  4010cd:	74 11                	je     4010e0 <register_tm_clones+0x30>
  4010cf:	b8 00 00 00 00       	mov    eax,0x0
  4010d4:	48 85 c0             	test   rax,rax
  4010d7:	74 07                	je     4010e0 <register_tm_clones+0x30>
  4010d9:	bf 28 40 40 00       	mov    edi,0x404028
  4010de:	ff e0                	jmp    rax
  4010e0:	c3                   	ret    
  4010e1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  4010e8:	00 00 00 00 
  4010ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004010f0 <__do_global_dtors_aux>:
  4010f0:	f3 0f 1e fa          	endbr64 
  4010f4:	80 3d 29 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f29],0x0        # 404024 <completed.0>
  4010fb:	75 13                	jne    401110 <__do_global_dtors_aux+0x20>
  4010fd:	55                   	push   rbp
  4010fe:	48 89 e5             	mov    rbp,rsp
  401101:	e8 7a ff ff ff       	call   401080 <deregister_tm_clones>
  401106:	c6 05 17 2f 00 00 01 	mov    BYTE PTR [rip+0x2f17],0x1        # 404024 <completed.0>
  40110d:	5d                   	pop    rbp
  40110e:	c3                   	ret    
  40110f:	90                   	nop
  401110:	c3                   	ret    
  401111:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  401118:	00 00 00 00 
  40111c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401120 <frame_dummy>:
  401120:	f3 0f 1e fa          	endbr64 
  401124:	eb 8a                	jmp    4010b0 <register_tm_clones>

0000000000401126 <add4>:
  401126:	55                   	push   rbp
  401127:	48 89 e5             	mov    rbp,rsp
  40112a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  40112e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  401132:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  401136:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  40113a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40113e:	89 c2                	mov    edx,eax
  401140:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  401144:	01 c2                	add    edx,eax
  401146:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40114a:	01 c2                	add    edx,eax
  40114c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  401150:	01 d0                	add    eax,edx
  401152:	5d                   	pop    rbp
  401153:	c3                   	ret    

0000000000401154 <main>:
  401154:	55                   	push   rbp
  401155:	48 89 e5             	mov    rbp,rsp
  401158:	48 83 ec 10          	sub    rsp,0x10
  40115c:	b9 14 00 00 00       	mov    ecx,0x14
  401161:	ba 0f 00 00 00       	mov    edx,0xf
  401166:	be 0a 00 00 00       	mov    esi,0xa
  40116b:	bf 05 00 00 00       	mov    edi,0x5
  401170:	e8 b1 ff ff ff       	call   401126 <add4>
  401175:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  401178:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40117b:	89 c6                	mov    esi,eax
  40117d:	bf 10 20 40 00       	mov    edi,0x402010
  401182:	b8 00 00 00 00       	mov    eax,0x0
  401187:	e8 a4 fe ff ff       	call   401030 <printf@plt>
  40118c:	b8 00 00 00 00       	mov    eax,0x0
  401191:	c9                   	leave  
  401192:	c3                   	ret    

Disassembly of section .fini:

0000000000401194 <_fini>:
  401194:	f3 0f 1e fa          	endbr64 
  401198:	48 83 ec 08          	sub    rsp,0x8
  40119c:	48 83 c4 08          	add    rsp,0x8
  4011a0:	c3                   	ret    

Disassembly of section .rodata:

0000000000402000 <_IO_stdin_used>:
  402000:	01 00                	add    DWORD PTR [rax],eax
  402002:	02 00                	add    al,BYTE PTR [rax]
  402004:	00 00                	add    BYTE PTR [rax],al
	...

0000000000402008 <__dso_handle>:
	...
  402010:	73 75                	jae    402087 <__GNU_EH_FRAME_HDR+0x6b>
  402012:	6d                   	ins    DWORD PTR es:[rdi],dx
  402013:	3a 20                	cmp    ah,BYTE PTR [rax]
  402015:	25                   	.byte 0x25
  402016:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000040201c <__GNU_EH_FRAME_HDR>:
  40201c:	01 1b                	add    DWORD PTR [rbx],ebx
  40201e:	03 3b                	add    edi,DWORD PTR [rbx]
  402020:	30 00                	xor    BYTE PTR [rax],al
  402022:	00 00                	add    BYTE PTR [rax],al
  402024:	05 00 00 00 04       	add    eax,0x4000000
  402029:	f0 ff                	lock (bad) 
  40202b:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
  40202f:	00 24 f0             	add    BYTE PTR [rax+rsi*8],ah
  402032:	ff                   	(bad)  
  402033:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  402037:	00 54 f0 ff          	add    BYTE PTR [rax+rsi*8-0x1],dl
  40203b:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
  40203e:	00 00                	add    BYTE PTR [rax],al
  402040:	0a f1                	or     dh,cl
  402042:	ff                   	(bad)  
  402043:	ff 9c 00 00 00 38 f1 	call   FWORD PTR [rax+rax*1-0xec80000]
  40204a:	ff                   	(bad)  
  40204b:	ff                   	(bad)  
  40204c:	bc                   	.byte 0xbc
  40204d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000402050 <__FRAME_END__-0xa8>:
  402050:	14 00                	adc    al,0x0
  402052:	00 00                	add    BYTE PTR [rax],al
  402054:	00 00                	add    BYTE PTR [rax],al
  402056:	00 00                	add    BYTE PTR [rax],al
  402058:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  40205b:	00 01                	add    BYTE PTR [rcx],al
  40205d:	78 10                	js     40206f <__GNU_EH_FRAME_HDR+0x53>
  40205f:	01 1b                	add    DWORD PTR [rbx],ebx
  402061:	0c 07                	or     al,0x7
  402063:	08 90 01 00 00 10    	or     BYTE PTR [rax+0x10000001],dl
  402069:	00 00                	add    BYTE PTR [rax],al
  40206b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40206e:	00 00                	add    BYTE PTR [rax],al
  402070:	d0 ef                	shr    bh,1
  402072:	ff                   	(bad)  
  402073:	ff 26                	jmp    QWORD PTR [rsi]
  402075:	00 00                	add    BYTE PTR [rax],al
  402077:	00 00                	add    BYTE PTR [rax],al
  402079:	44 07                	rex.R (bad) 
  40207b:	10 10                	adc    BYTE PTR [rax],dl
  40207d:	00 00                	add    BYTE PTR [rax],al
  40207f:	00 30                	add    BYTE PTR [rax],dh
  402081:	00 00                	add    BYTE PTR [rax],al
  402083:	00 ec                	add    ah,ch
  402085:	ef                   	out    dx,eax
  402086:	ff                   	(bad)  
  402087:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # 40208d <__GNU_EH_FRAME_HDR+0x71>
  40208d:	00 00                	add    BYTE PTR [rax],al
  40208f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  402092:	00 00                	add    BYTE PTR [rax],al
  402094:	44 00 00             	add    BYTE PTR [rax],r8b
  402097:	00 88 ef ff ff 20    	add    BYTE PTR [rax+0x20ffffef],cl
  40209d:	00 00                	add    BYTE PTR [rax],al
  40209f:	00 00                	add    BYTE PTR [rax],al
  4020a1:	0e                   	(bad)  
  4020a2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  4020a5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  4020a8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  4020ab:	80 00 3f             	add    BYTE PTR [rax],0x3f
  4020ae:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  4020b0:	2a 33                	sub    dh,BYTE PTR [rbx]
  4020b2:	24 22                	and    al,0x22
  4020b4:	00 00                	add    BYTE PTR [rax],al
  4020b6:	00 00                	add    BYTE PTR [rax],al
  4020b8:	1c 00                	sbb    al,0x0
  4020ba:	00 00                	add    BYTE PTR [rax],al
  4020bc:	6c                   	ins    BYTE PTR es:[rdi],dx
  4020bd:	00 00                	add    BYTE PTR [rax],al
  4020bf:	00 66 f0             	add    BYTE PTR [rsi-0x10],ah
  4020c2:	ff                   	(bad)  
  4020c3:	ff 2e                	jmp    FWORD PTR [rsi]
  4020c5:	00 00                	add    BYTE PTR [rax],al
  4020c7:	00 00                	add    BYTE PTR [rax],al
  4020c9:	41 0e                	rex.B (bad) 
  4020cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4020d1:	69 0c 07 08 00 00 00 	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  4020d8:	1c 00                	sbb    al,0x0
  4020da:	00 00                	add    BYTE PTR [rax],al
  4020dc:	8c 00                	mov    WORD PTR [rax],es
  4020de:	00 00                	add    BYTE PTR [rax],al
  4020e0:	74 f0                	je     4020d2 <__GNU_EH_FRAME_HDR+0xb6>
  4020e2:	ff                   	(bad)  
  4020e3:	ff                   	(bad)  
  4020e4:	3f                   	(bad)  
  4020e5:	00 00                	add    BYTE PTR [rax],al
  4020e7:	00 00                	add    BYTE PTR [rax],al
  4020e9:	41 0e                	rex.B (bad) 
  4020eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4020f1:	7a 0c                	jp     4020ff <__FRAME_END__+0x7>
  4020f3:	07                   	(bad)  
  4020f4:	08 00                	or     BYTE PTR [rax],al
	...

00000000004020f8 <__FRAME_END__>:
  4020f8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000403e10 <__frame_dummy_init_array_entry>:
  403e10:	20 11                	and    BYTE PTR [rcx],dl
  403e12:	40 00 00             	rex add BYTE PTR [rax],al
  403e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000403e18 <__do_global_dtors_aux_fini_array_entry>:
  403e18:	f0 10 40 00          	lock adc BYTE PTR [rax+0x0],al
  403e1c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000403e20 <_DYNAMIC>:
  403e20:	01 00                	add    DWORD PTR [rax],eax
  403e22:	00 00                	add    BYTE PTR [rax],al
  403e24:	00 00                	add    BYTE PTR [rax],al
  403e26:	00 00                	add    BYTE PTR [rax],al
  403e28:	1a 00                	sbb    al,BYTE PTR [rax]
  403e2a:	00 00                	add    BYTE PTR [rax],al
  403e2c:	00 00                	add    BYTE PTR [rax],al
  403e2e:	00 00                	add    BYTE PTR [rax],al
  403e30:	0c 00                	or     al,0x0
  403e32:	00 00                	add    BYTE PTR [rax],al
  403e34:	00 00                	add    BYTE PTR [rax],al
  403e36:	00 00                	add    BYTE PTR [rax],al
  403e38:	00 10                	add    BYTE PTR [rax],dl
  403e3a:	40 00 00             	rex add BYTE PTR [rax],al
  403e3d:	00 00                	add    BYTE PTR [rax],al
  403e3f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 403e45 <_DYNAMIC+0x25>
  403e45:	00 00                	add    BYTE PTR [rax],al
  403e47:	00 94 11 40 00 00 00 	add    BYTE PTR [rcx+rdx*1+0x40],dl
  403e4e:	00 00                	add    BYTE PTR [rax],al
  403e50:	19 00                	sbb    DWORD PTR [rax],eax
  403e52:	00 00                	add    BYTE PTR [rax],al
  403e54:	00 00                	add    BYTE PTR [rax],al
  403e56:	00 00                	add    BYTE PTR [rax],al
  403e58:	10 3e                	adc    BYTE PTR [rsi],bh
  403e5a:	40 00 00             	rex add BYTE PTR [rax],al
  403e5d:	00 00                	add    BYTE PTR [rax],al
  403e5f:	00 1b                	add    BYTE PTR [rbx],bl
  403e61:	00 00                	add    BYTE PTR [rax],al
  403e63:	00 00                	add    BYTE PTR [rax],al
  403e65:	00 00                	add    BYTE PTR [rax],al
  403e67:	00 08                	add    BYTE PTR [rax],cl
  403e69:	00 00                	add    BYTE PTR [rax],al
  403e6b:	00 00                	add    BYTE PTR [rax],al
  403e6d:	00 00                	add    BYTE PTR [rax],al
  403e6f:	00 1a                	add    BYTE PTR [rdx],bl
  403e71:	00 00                	add    BYTE PTR [rax],al
  403e73:	00 00                	add    BYTE PTR [rax],al
  403e75:	00 00                	add    BYTE PTR [rax],al
  403e77:	00 18                	add    BYTE PTR [rax],bl
  403e79:	3e 40 00 00          	ds rex add BYTE PTR [rax],al
  403e7d:	00 00                	add    BYTE PTR [rax],al
  403e7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  403e82:	00 00                	add    BYTE PTR [rax],al
  403e84:	00 00                	add    BYTE PTR [rax],al
  403e86:	00 00                	add    BYTE PTR [rax],al
  403e88:	08 00                	or     BYTE PTR [rax],al
  403e8a:	00 00                	add    BYTE PTR [rax],al
  403e8c:	00 00                	add    BYTE PTR [rax],al
  403e8e:	00 00                	add    BYTE PTR [rax],al
  403e90:	f5                   	cmc    
  403e91:	fe                   	(bad)  
  403e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  403e95:	00 00                	add    BYTE PTR [rax],al
  403e97:	00 c0                	add    al,al
  403e99:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  403e9c:	00 00                	add    BYTE PTR [rax],al
  403e9e:	00 00                	add    BYTE PTR [rax],al
  403ea0:	05 00 00 00 00       	add    eax,0x0
  403ea5:	00 00                	add    BYTE PTR [rax],al
  403ea7:	00 40 04             	add    BYTE PTR [rax+0x4],al
  403eaa:	40 00 00             	rex add BYTE PTR [rax],al
  403ead:	00 00                	add    BYTE PTR [rax],al
  403eaf:	00 06                	add    BYTE PTR [rsi],al
  403eb1:	00 00                	add    BYTE PTR [rax],al
  403eb3:	00 00                	add    BYTE PTR [rax],al
  403eb5:	00 00                	add    BYTE PTR [rax],al
  403eb7:	00 e0                	add    al,ah
  403eb9:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  403ebc:	00 00                	add    BYTE PTR [rax],al
  403ebe:	00 00                	add    BYTE PTR [rax],al
  403ec0:	0a 00                	or     al,BYTE PTR [rax]
  403ec2:	00 00                	add    BYTE PTR [rax],al
  403ec4:	00 00                	add    BYTE PTR [rax],al
  403ec6:	00 00                	add    BYTE PTR [rax],al
  403ec8:	4a 00 00             	rex.WX add BYTE PTR [rax],al
  403ecb:	00 00                	add    BYTE PTR [rax],al
  403ecd:	00 00                	add    BYTE PTR [rax],al
  403ecf:	00 0b                	add    BYTE PTR [rbx],cl
  403ed1:	00 00                	add    BYTE PTR [rax],al
  403ed3:	00 00                	add    BYTE PTR [rax],al
  403ed5:	00 00                	add    BYTE PTR [rax],al
  403ed7:	00 18                	add    BYTE PTR [rax],bl
  403ed9:	00 00                	add    BYTE PTR [rax],al
  403edb:	00 00                	add    BYTE PTR [rax],al
  403edd:	00 00                	add    BYTE PTR [rax],al
  403edf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 403ee5 <_DYNAMIC+0xc5>
	...
  403eed:	00 00                	add    BYTE PTR [rax],al
  403eef:	00 03                	add    BYTE PTR [rbx],al
	...
  403ef9:	40                   	rex
  403efa:	40 00 00             	rex add BYTE PTR [rax],al
  403efd:	00 00                	add    BYTE PTR [rax],al
  403eff:	00 02                	add    BYTE PTR [rdx],al
  403f01:	00 00                	add    BYTE PTR [rax],al
  403f03:	00 00                	add    BYTE PTR [rax],al
  403f05:	00 00                	add    BYTE PTR [rax],al
  403f07:	00 18                	add    BYTE PTR [rax],bl
  403f09:	00 00                	add    BYTE PTR [rax],al
  403f0b:	00 00                	add    BYTE PTR [rax],al
  403f0d:	00 00                	add    BYTE PTR [rax],al
  403f0f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  403f12:	00 00                	add    BYTE PTR [rax],al
  403f14:	00 00                	add    BYTE PTR [rax],al
  403f16:	00 00                	add    BYTE PTR [rax],al
  403f18:	07                   	(bad)  
  403f19:	00 00                	add    BYTE PTR [rax],al
  403f1b:	00 00                	add    BYTE PTR [rax],al
  403f1d:	00 00                	add    BYTE PTR [rax],al
  403f1f:	00 17                	add    BYTE PTR [rdi],dl
  403f21:	00 00                	add    BYTE PTR [rax],al
  403f23:	00 00                	add    BYTE PTR [rax],al
  403f25:	00 00                	add    BYTE PTR [rax],al
  403f27:	00 f8                	add    al,bh
  403f29:	04 40                	add    al,0x40
  403f2b:	00 00                	add    BYTE PTR [rax],al
  403f2d:	00 00                	add    BYTE PTR [rax],al
  403f2f:	00 07                	add    BYTE PTR [rdi],al
  403f31:	00 00                	add    BYTE PTR [rax],al
  403f33:	00 00                	add    BYTE PTR [rax],al
  403f35:	00 00                	add    BYTE PTR [rax],al
  403f37:	00 c8                	add    al,cl
  403f39:	04 40                	add    al,0x40
  403f3b:	00 00                	add    BYTE PTR [rax],al
  403f3d:	00 00                	add    BYTE PTR [rax],al
  403f3f:	00 08                	add    BYTE PTR [rax],cl
  403f41:	00 00                	add    BYTE PTR [rax],al
  403f43:	00 00                	add    BYTE PTR [rax],al
  403f45:	00 00                	add    BYTE PTR [rax],al
  403f47:	00 30                	add    BYTE PTR [rax],dh
  403f49:	00 00                	add    BYTE PTR [rax],al
  403f4b:	00 00                	add    BYTE PTR [rax],al
  403f4d:	00 00                	add    BYTE PTR [rax],al
  403f4f:	00 09                	add    BYTE PTR [rcx],cl
  403f51:	00 00                	add    BYTE PTR [rax],al
  403f53:	00 00                	add    BYTE PTR [rax],al
  403f55:	00 00                	add    BYTE PTR [rax],al
  403f57:	00 18                	add    BYTE PTR [rax],bl
  403f59:	00 00                	add    BYTE PTR [rax],al
  403f5b:	00 00                	add    BYTE PTR [rax],al
  403f5d:	00 00                	add    BYTE PTR [rax],al
  403f5f:	00 fe                	add    dh,bh
  403f61:	ff                   	(bad)  
  403f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  403f65:	00 00                	add    BYTE PTR [rax],al
  403f67:	00 98 04 40 00 00    	add    BYTE PTR [rax+0x4004],bl
  403f6d:	00 00                	add    BYTE PTR [rax],al
  403f6f:	00 ff                	add    bh,bh
  403f71:	ff                   	(bad)  
  403f72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  403f75:	00 00                	add    BYTE PTR [rax],al
  403f77:	00 01                	add    BYTE PTR [rcx],al
  403f79:	00 00                	add    BYTE PTR [rax],al
  403f7b:	00 00                	add    BYTE PTR [rax],al
  403f7d:	00 00                	add    BYTE PTR [rax],al
  403f7f:	00 f0                	add    al,dh
  403f81:	ff                   	(bad)  
  403f82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  403f85:	00 00                	add    BYTE PTR [rax],al
  403f87:	00 8a 04 40 00 00    	add    BYTE PTR [rdx+0x4004],cl
	...

Disassembly of section .got:

0000000000403ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000404000 <_GLOBAL_OFFSET_TABLE_>:
  404000:	20 3e                	and    BYTE PTR [rsi],bh
  404002:	40 00 00             	rex add BYTE PTR [rax],al
	...
  404015:	00 00                	add    BYTE PTR [rax],al
  404017:	00 36                	add    BYTE PTR [rsi],dh
  404019:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40401c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404020 <__data_start>:
  404020:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000404024 <completed.0>:
  404024:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   8:	55                   	push   rbp
   9:	29 20                	sub    DWORD PTR [rax],esp
   b:	31 32                	xor    DWORD PTR [rdx],esi
   d:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  10:	31 20                	xor    DWORD PTR [rax],esp
  12:	32 30                	xor    dh,BYTE PTR [rax]
  14:	32 32                	xor    dh,BYTE PTR [rdx]
  16:	31 31                	xor    DWORD PTR [rcx],esi
  18:	32 31                	xor    dh,BYTE PTR [rcx]
  1a:	20 28                	and    BYTE PTR [rax],ch
  1c:	52                   	push   rdx
  1d:	65 64 20 48 61       	gs and BYTE PTR fs:[rax+0x61],cl
  22:	74 20                	je     44 <__abi_tag-0x400358>
  24:	31 32                	xor    DWORD PTR [rdx],esi
  26:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  29:	31                   	.byte 0x31
  2a:	2d                   	.byte 0x2d
  2b:	34 29                	xor    al,0x29
	...

Disassembly of section .gnu.build.attributes:

0000000000406028 <.gnu.build.attributes>:
  406028:	08 00                	or     BYTE PTR [rax],al
  40602a:	00 00                	add    BYTE PTR [rax],al
  40602c:	10 00                	adc    BYTE PTR [rax],al
  40602e:	00 00                	add    BYTE PTR [rax],al
  406030:	00 01                	add    BYTE PTR [rcx],al
  406032:	00 00                	add    BYTE PTR [rax],al
  406034:	47                   	rex.RXB
  406035:	41 24 01             	rex.B and al,0x1
  406038:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  40603b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40603e:	40 00 00             	rex add BYTE PTR [rax],al
  406041:	00 00                	add    BYTE PTR [rax],al
  406043:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  406046:	40 00 00             	rex add BYTE PTR [rax],al
  406049:	00 00                	add    BYTE PTR [rax],al
  40604b:	00 08                	add    BYTE PTR [rax],cl
  40604d:	00 00                	add    BYTE PTR [rax],al
  40604f:	00 10                	add    BYTE PTR [rax],dl
  406051:	00 00                	add    BYTE PTR [rax],al
  406053:	00 00                	add    BYTE PTR [rax],al
  406055:	01 00                	add    DWORD PTR [rax],eax
  406057:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40605a:	24 01                	and    al,0x1
  40605c:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  40605f:	00 75 10             	add    BYTE PTR [rbp+0x10],dh
  406062:	40 00 00             	rex add BYTE PTR [rax],al
  406065:	00 00                	add    BYTE PTR [rax],al
  406067:	00 75 10             	add    BYTE PTR [rbp+0x10],dh
  40606a:	40 00 00             	rex add BYTE PTR [rax],al
  40606d:	00 00                	add    BYTE PTR [rax],al
  40606f:	00 08                	add    BYTE PTR [rax],cl
  406071:	00 00                	add    BYTE PTR [rax],al
  406073:	00 10                	add    BYTE PTR [rax],dl
  406075:	00 00                	add    BYTE PTR [rax],al
  406077:	00 00                	add    BYTE PTR [rax],al
  406079:	01 00                	add    DWORD PTR [rax],eax
  40607b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40607e:	24 01                	and    al,0x1
  406080:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  406083:	00 00                	add    BYTE PTR [rax],al
  406085:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  406088:	00 00                	add    BYTE PTR [rax],al
  40608a:	00 00                	add    BYTE PTR [rax],al
  40608c:	16                   	(bad)  
  40608d:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  406090:	00 00                	add    BYTE PTR [rax],al
  406092:	00 00                	add    BYTE PTR [rax],al
  406094:	08 00                	or     BYTE PTR [rax],al
  406096:	00 00                	add    BYTE PTR [rax],al
  406098:	10 00                	adc    BYTE PTR [rax],al
  40609a:	00 00                	add    BYTE PTR [rax],al
  40609c:	00 01                	add    BYTE PTR [rcx],al
  40609e:	00 00                	add    BYTE PTR [rax],al
  4060a0:	47                   	rex.RXB
  4060a1:	41 24 01             	rex.B and al,0x1
  4060a4:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  4060a7:	00 94 11 40 00 00 00 	add    BYTE PTR [rcx+rdx*1+0x40],dl
  4060ae:	00 00                	add    BYTE PTR [rax],al
  4060b0:	9c                   	pushf  
  4060b1:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  4060b4:	00 00                	add    BYTE PTR [rax],al
  4060b6:	00 00                	add    BYTE PTR [rax],al
  4060b8:	08 00                	or     BYTE PTR [rax],al
  4060ba:	00 00                	add    BYTE PTR [rax],al
  4060bc:	10 00                	adc    BYTE PTR [rax],al
  4060be:	00 00                	add    BYTE PTR [rax],al
  4060c0:	00 01                	add    BYTE PTR [rcx],al
  4060c2:	00 00                	add    BYTE PTR [rax],al
  4060c4:	47                   	rex.RXB
  4060c5:	41 24 01             	rex.B and al,0x1
  4060c8:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  4060cb:	00 80 10 40 00 00    	add    BYTE PTR [rax+0x4010],al
  4060d1:	00 00                	add    BYTE PTR [rax],al
  4060d3:	00 26                	add    BYTE PTR [rsi],ah
  4060d5:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  4060d8:	00 00                	add    BYTE PTR [rax],al
  4060da:	00 00                	add    BYTE PTR [rax],al
  4060dc:	08 00                	or     BYTE PTR [rax],al
  4060de:	00 00                	add    BYTE PTR [rax],al
  4060e0:	10 00                	adc    BYTE PTR [rax],al
  4060e2:	00 00                	add    BYTE PTR [rax],al
  4060e4:	00 01                	add    BYTE PTR [rcx],al
  4060e6:	00 00                	add    BYTE PTR [rax],al
  4060e8:	47                   	rex.RXB
  4060e9:	41 24 01             	rex.B and al,0x1
  4060ec:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  4060ef:	00 93 11 40 00 00    	add    BYTE PTR [rbx+0x4011],dl
  4060f5:	00 00                	add    BYTE PTR [rax],al
  4060f7:	00 93 11 40 00 00    	add    BYTE PTR [rbx+0x4011],dl
  4060fd:	00 00                	add    BYTE PTR [rax],al
  4060ff:	00 08                	add    BYTE PTR [rax],cl
  406101:	00 00                	add    BYTE PTR [rax],al
  406103:	00 10                	add    BYTE PTR [rax],dl
  406105:	00 00                	add    BYTE PTR [rax],al
  406107:	00 00                	add    BYTE PTR [rax],al
  406109:	01 00                	add    DWORD PTR [rax],eax
  40610b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40610e:	24 01                	and    al,0x1
  406110:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  406113:	00 93 11 40 00 00    	add    BYTE PTR [rbx+0x4011],dl
  406119:	00 00                	add    BYTE PTR [rax],al
  40611b:	00 93 11 40 00 00    	add    BYTE PTR [rbx+0x4011],dl
  406121:	00 00                	add    BYTE PTR [rax],al
  406123:	00 08                	add    BYTE PTR [rax],cl
  406125:	00 00                	add    BYTE PTR [rax],al
  406127:	00 10                	add    BYTE PTR [rax],dl
  406129:	00 00                	add    BYTE PTR [rax],al
  40612b:	00 00                	add    BYTE PTR [rax],al
  40612d:	01 00                	add    DWORD PTR [rax],eax
  40612f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406132:	24 01                	and    al,0x1
  406134:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  406137:	00 16                	add    BYTE PTR [rsi],dl
  406139:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40613c:	00 00                	add    BYTE PTR [rax],al
  40613e:	00 00                	add    BYTE PTR [rax],al
  406140:	1b 10                	sbb    edx,DWORD PTR [rax]
  406142:	40 00 00             	rex add BYTE PTR [rax],al
  406145:	00 00                	add    BYTE PTR [rax],al
  406147:	00 08                	add    BYTE PTR [rax],cl
  406149:	00 00                	add    BYTE PTR [rax],al
  40614b:	00 10                	add    BYTE PTR [rax],dl
  40614d:	00 00                	add    BYTE PTR [rax],al
  40614f:	00 00                	add    BYTE PTR [rax],al
  406151:	01 00                	add    DWORD PTR [rax],eax
  406153:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406156:	24 01                	and    al,0x1
  406158:	33 61 31             	xor    esp,DWORD PTR [rcx+0x31]
  40615b:	00 9c 11 40 00 00 00 	add    BYTE PTR [rcx+rdx*1+0x40],bl
  406162:	00 00                	add    BYTE PTR [rax],al
  406164:	a1 11 40 00 00 00 00 	movabs eax,ds:0xb00000000004011
  40616b:	00 0b 
  40616d:	00 00                	add    BYTE PTR [rax],al
  40616f:	00 10                	add    BYTE PTR [rax],dl
  406171:	00 00                	add    BYTE PTR [rax],al
  406173:	00 00                	add    BYTE PTR [rax],al
  406175:	01 00                	add    DWORD PTR [rax],eax
  406177:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40617a:	24 01                	and    al,0x1
  40617c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40617f:	30 39                	xor    BYTE PTR [rcx],bh
  406181:	32 00                	xor    al,BYTE PTR [rax]
  406183:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406186:	40 00 00             	rex add BYTE PTR [rax],al
  406189:	00 00                	add    BYTE PTR [rax],al
  40618b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40618e:	40 00 00             	rex add BYTE PTR [rax],al
  406191:	00 00                	add    BYTE PTR [rax],al
  406193:	00 20                	add    BYTE PTR [rax],ah
	...
  40619d:	01 00                	add    DWORD PTR [rax],eax
  40619f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4061a2:	24 05                	and    al,0x5
  4061a4:	72 75                	jb     40621b <__TMC_END__+0x21f3>
  4061a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4061a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4061a8:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  4061af:	20 31                	and    BYTE PTR [rcx],dh
  4061b1:	32 2e                	xor    ch,BYTE PTR [rsi]
  4061b3:	32 2e                	xor    ch,BYTE PTR [rsi]
  4061b5:	31 20                	xor    DWORD PTR [rax],esp
  4061b7:	32 30                	xor    dh,BYTE PTR [rax]
  4061b9:	32 32                	xor    dh,BYTE PTR [rdx]
  4061bb:	31 31                	xor    DWORD PTR [rcx],esi
  4061bd:	32 31                	xor    dh,BYTE PTR [rcx]
  4061bf:	00 20                	add    BYTE PTR [rax],ah
	...
  4061c9:	01 00                	add    DWORD PTR [rax],eax
  4061cb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4061ce:	24 05                	and    al,0x5
  4061d0:	61                   	(bad)  
  4061d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4061d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4061d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4061d4:	62                   	(bad)  
  4061d5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  4061dc:	31 32                	xor    DWORD PTR [rdx],esi
  4061de:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  4061e1:	31 20                	xor    DWORD PTR [rax],esp
  4061e3:	32 30                	xor    dh,BYTE PTR [rax]
  4061e5:	32 32                	xor    dh,BYTE PTR [rdx]
  4061e7:	30 38                	xor    BYTE PTR [rax],bh
  4061e9:	31 39                	xor    DWORD PTR [rcx],edi
  4061eb:	00 19                	add    BYTE PTR [rcx],bl
	...
  4061f5:	01 00                	add    DWORD PTR [rax],eax
  4061f7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4061fa:	24 05                	and    al,0x5
  4061fc:	70 6c                	jo     40626a <__TMC_END__+0x2242>
  4061fe:	75 67                	jne    406267 <__TMC_END__+0x223f>
  406200:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406207:	3a 20                	cmp    ah,BYTE PTR [rax]
  406209:	61                   	(bad)  
  40620a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40620b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40620c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40620d:	62                   	(bad)  
  40620e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40621d:	01 00                	add    DWORD PTR [rax],eax
  40621f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406222:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406225:	57                   	push   rdi
  406226:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40622a:	00 00                	add    BYTE PTR [rax],al
  40622c:	06                   	(bad)  
	...
  406235:	01 00                	add    DWORD PTR [rax],eax
  406237:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40623a:	2a 02                	sub    al,BYTE PTR [rdx]
  40623c:	03 00                	add    eax,DWORD PTR [rax]
  40623e:	00 00                	add    BYTE PTR [rax],al
  406240:	0f 00 00             	sldt   WORD PTR [rax]
  406243:	00 00                	add    BYTE PTR [rax],al
  406245:	00 00                	add    BYTE PTR [rax],al
  406247:	00 00                	add    BYTE PTR [rax],al
  406249:	01 00                	add    DWORD PTR [rax],eax
  40624b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40624e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406251:	61                   	(bad)  
  406252:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406255:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406259:	68 00 00 13 00       	push   0x130000
  40625e:	00 00                	add    BYTE PTR [rax],al
  406260:	00 00                	add    BYTE PTR [rax],al
  406262:	00 00                	add    BYTE PTR [rax],al
  406264:	00 01                	add    BYTE PTR [rcx],al
  406266:	00 00                	add    BYTE PTR [rax],al
  406268:	47                   	rex.RXB
  406269:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40626d:	5f                   	pop    rdi
  40626e:	70 72                	jo     4062e2 <__TMC_END__+0x22ba>
  406270:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406271:	74 65                	je     4062d8 <__TMC_END__+0x22b0>
  406273:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406277:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406278:	00 08                	add    BYTE PTR [rax],cl
  40627a:	00 00                	add    BYTE PTR [rax],al
  40627c:	0d 00 00 00 00       	or     eax,0x0
  406281:	00 00                	add    BYTE PTR [rax],al
  406283:	00 00                	add    BYTE PTR [rax],al
  406285:	01 00                	add    DWORD PTR [rax],eax
  406287:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40628a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40628d:	52                   	push   rdx
  40628e:	54                   	push   rsp
  40628f:	49                   	rex.WB
  406290:	46 59                	rex.RX pop rcx
  406292:	00 ff                	add    bh,bh
  406294:	00 00                	add    BYTE PTR [rax],al
  406296:	00 00                	add    BYTE PTR [rax],al
  406298:	16                   	(bad)  
	...
  4062a1:	01 00                	add    DWORD PTR [rax],eax
  4062a3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4062a6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  4062a9:	49                   	rex.WB
  4062aa:	42                   	rex.X
  4062ab:	43 58                	rex.XB pop r8
  4062ad:	58                   	pop    rax
  4062ae:	5f                   	pop    rdi
  4062af:	41 53                	push   r11
  4062b1:	53                   	push   rbx
  4062b2:	45 52                	rex.RB push r10
  4062b4:	54                   	push   rsp
  4062b5:	49                   	rex.WB
  4062b6:	4f                   	rex.WRXB
  4062b7:	4e 53                	rex.WRX push rbx
  4062b9:	00 00                	add    BYTE PTR [rax],al
  4062bb:	00 06                	add    BYTE PTR [rsi],al
	...
  4062c5:	01 00                	add    DWORD PTR [rax],eax
  4062c7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4062ca:	2a 07                	sub    al,BYTE PTR [rdi]
  4062cc:	03 00                	add    eax,DWORD PTR [rax]
  4062ce:	00 00                	add    BYTE PTR [rax],al
  4062d0:	05 00 00 00 00       	add    eax,0x0
  4062d5:	00 00                	add    BYTE PTR [rax],al
  4062d7:	00 00                	add    BYTE PTR [rax],al
  4062d9:	01 00                	add    DWORD PTR [rax],eax
  4062db:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4062de:	21 08                	and    DWORD PTR [rax],ecx
  4062e0:	00 00                	add    BYTE PTR [rax],al
  4062e2:	00 00                	add    BYTE PTR [rax],al
  4062e4:	16                   	(bad)  
	...
  4062ed:	01 00                	add    DWORD PTR [rax],eax
  4062ef:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4062f2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  4062f5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  4062fc:	65 
  4062fd:	5f                   	pop    rdi
  4062fe:	70 6f                	jo     40636f <__TMC_END__+0x2347>
  406300:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406307:	00 06                	add    BYTE PTR [rsi],al
	...
  406311:	01 00                	add    DWORD PTR [rax],eax
  406313:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406316:	2a 06                	sub    al,BYTE PTR [rsi]
  406318:	12 00                	adc    al,BYTE PTR [rax]
  40631a:	00 00                	add    BYTE PTR [rax],al
  40631c:	11 00                	adc    DWORD PTR [rax],eax
  40631e:	00 00                	add    BYTE PTR [rax],al
  406320:	00 00                	add    BYTE PTR [rax],al
  406322:	00 00                	add    BYTE PTR [rax],al
  406324:	00 01                	add    BYTE PTR [rcx],al
  406326:	00 00                	add    BYTE PTR [rax],al
  406328:	47                   	rex.RXB
  406329:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  40632d:	61                   	(bad)  
  40632e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406331:	72 65                	jb     406398 <__TMC_END__+0x2370>
  406333:	61                   	(bad)  
  406334:	6c                   	ins    BYTE PTR es:[rdi],dx
  406335:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  40633c:	0b 00                	or     eax,DWORD PTR [rax]
  40633e:	00 00                	add    BYTE PTR [rax],al
  406340:	10 00                	adc    BYTE PTR [rax],al
  406342:	00 00                	add    BYTE PTR [rax],al
  406344:	00 01                	add    BYTE PTR [rcx],al
  406346:	00 00                	add    BYTE PTR [rax],al
  406348:	47                   	rex.RXB
  406349:	41 24 01             	rex.B and al,0x1
  40634c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40634f:	30 39                	xor    BYTE PTR [rcx],bh
  406351:	32 00                	xor    al,BYTE PTR [rax]
  406353:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406356:	40 00 00             	rex add BYTE PTR [rax],al
  406359:	00 00                	add    BYTE PTR [rax],al
  40635b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40635e:	40 00 00             	rex add BYTE PTR [rax],al
  406361:	00 00                	add    BYTE PTR [rax],al
  406363:	00 20                	add    BYTE PTR [rax],ah
	...
  40636d:	01 00                	add    DWORD PTR [rax],eax
  40636f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406372:	24 05                	and    al,0x5
  406374:	72 75                	jb     4063eb <__TMC_END__+0x23c3>
  406376:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406377:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406378:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40637f:	20 31                	and    BYTE PTR [rcx],dh
  406381:	32 2e                	xor    ch,BYTE PTR [rsi]
  406383:	32 2e                	xor    ch,BYTE PTR [rsi]
  406385:	31 20                	xor    DWORD PTR [rax],esp
  406387:	32 30                	xor    dh,BYTE PTR [rax]
  406389:	32 32                	xor    dh,BYTE PTR [rdx]
  40638b:	31 31                	xor    DWORD PTR [rcx],esi
  40638d:	32 31                	xor    dh,BYTE PTR [rcx]
  40638f:	00 20                	add    BYTE PTR [rax],ah
	...
  406399:	01 00                	add    DWORD PTR [rax],eax
  40639b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40639e:	24 05                	and    al,0x5
  4063a0:	61                   	(bad)  
  4063a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4063a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4063a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4063a4:	62                   	(bad)  
  4063a5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  4063ac:	31 32                	xor    DWORD PTR [rdx],esi
  4063ae:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  4063b1:	31 20                	xor    DWORD PTR [rax],esp
  4063b3:	32 30                	xor    dh,BYTE PTR [rax]
  4063b5:	32 32                	xor    dh,BYTE PTR [rdx]
  4063b7:	30 38                	xor    BYTE PTR [rax],bh
  4063b9:	31 39                	xor    DWORD PTR [rcx],edi
  4063bb:	00 19                	add    BYTE PTR [rcx],bl
	...
  4063c5:	01 00                	add    DWORD PTR [rax],eax
  4063c7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4063ca:	24 05                	and    al,0x5
  4063cc:	70 6c                	jo     40643a <__TMC_END__+0x2412>
  4063ce:	75 67                	jne    406437 <__TMC_END__+0x240f>
  4063d0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  4063d7:	3a 20                	cmp    ah,BYTE PTR [rax]
  4063d9:	61                   	(bad)  
  4063da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4063db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4063dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4063dd:	62                   	(bad)  
  4063de:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  4063ed:	01 00                	add    DWORD PTR [rax],eax
  4063ef:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4063f2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  4063f5:	57                   	push   rdi
  4063f6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  4063fa:	00 00                	add    BYTE PTR [rax],al
  4063fc:	06                   	(bad)  
	...
  406405:	01 00                	add    DWORD PTR [rax],eax
  406407:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40640a:	2a 02                	sub    al,BYTE PTR [rdx]
  40640c:	03 00                	add    eax,DWORD PTR [rax]
  40640e:	00 00                	add    BYTE PTR [rax],al
  406410:	0f 00 00             	sldt   WORD PTR [rax]
  406413:	00 00                	add    BYTE PTR [rax],al
  406415:	00 00                	add    BYTE PTR [rax],al
  406417:	00 00                	add    BYTE PTR [rax],al
  406419:	01 00                	add    DWORD PTR [rax],eax
  40641b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40641e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406421:	61                   	(bad)  
  406422:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406425:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406429:	68 00 00 13 00       	push   0x130000
  40642e:	00 00                	add    BYTE PTR [rax],al
  406430:	00 00                	add    BYTE PTR [rax],al
  406432:	00 00                	add    BYTE PTR [rax],al
  406434:	00 01                	add    BYTE PTR [rcx],al
  406436:	00 00                	add    BYTE PTR [rax],al
  406438:	47                   	rex.RXB
  406439:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40643d:	5f                   	pop    rdi
  40643e:	70 72                	jo     4064b2 <__TMC_END__+0x248a>
  406440:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406441:	74 65                	je     4064a8 <__TMC_END__+0x2480>
  406443:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406447:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406448:	00 08                	add    BYTE PTR [rax],cl
  40644a:	00 00                	add    BYTE PTR [rax],al
  40644c:	0d 00 00 00 00       	or     eax,0x0
  406451:	00 00                	add    BYTE PTR [rax],al
  406453:	00 00                	add    BYTE PTR [rax],al
  406455:	01 00                	add    DWORD PTR [rax],eax
  406457:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40645a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40645d:	52                   	push   rdx
  40645e:	54                   	push   rsp
  40645f:	49                   	rex.WB
  406460:	46 59                	rex.RX pop rcx
  406462:	00 ff                	add    bh,bh
  406464:	00 00                	add    BYTE PTR [rax],al
  406466:	00 00                	add    BYTE PTR [rax],al
  406468:	16                   	(bad)  
	...
  406471:	01 00                	add    DWORD PTR [rax],eax
  406473:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406476:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406479:	49                   	rex.WB
  40647a:	42                   	rex.X
  40647b:	43 58                	rex.XB pop r8
  40647d:	58                   	pop    rax
  40647e:	5f                   	pop    rdi
  40647f:	41 53                	push   r11
  406481:	53                   	push   rbx
  406482:	45 52                	rex.RB push r10
  406484:	54                   	push   rsp
  406485:	49                   	rex.WB
  406486:	4f                   	rex.WRXB
  406487:	4e 53                	rex.WRX push rbx
  406489:	00 00                	add    BYTE PTR [rax],al
  40648b:	00 06                	add    BYTE PTR [rsi],al
	...
  406495:	01 00                	add    DWORD PTR [rax],eax
  406497:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40649a:	2a 07                	sub    al,BYTE PTR [rdi]
  40649c:	03 00                	add    eax,DWORD PTR [rax]
  40649e:	00 00                	add    BYTE PTR [rax],al
  4064a0:	05 00 00 00 00       	add    eax,0x0
  4064a5:	00 00                	add    BYTE PTR [rax],al
  4064a7:	00 00                	add    BYTE PTR [rax],al
  4064a9:	01 00                	add    DWORD PTR [rax],eax
  4064ab:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4064ae:	21 08                	and    DWORD PTR [rax],ecx
  4064b0:	00 00                	add    BYTE PTR [rax],al
  4064b2:	00 00                	add    BYTE PTR [rax],al
  4064b4:	16                   	(bad)  
	...
  4064bd:	01 00                	add    DWORD PTR [rax],eax
  4064bf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4064c2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  4064c5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  4064cc:	65 
  4064cd:	5f                   	pop    rdi
  4064ce:	70 6f                	jo     40653f <__TMC_END__+0x2517>
  4064d0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  4064d7:	00 06                	add    BYTE PTR [rsi],al
	...
  4064e1:	01 00                	add    DWORD PTR [rax],eax
  4064e3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4064e6:	2a 06                	sub    al,BYTE PTR [rsi]
  4064e8:	12 00                	adc    al,BYTE PTR [rax]
  4064ea:	00 00                	add    BYTE PTR [rax],al
  4064ec:	11 00                	adc    DWORD PTR [rax],eax
  4064ee:	00 00                	add    BYTE PTR [rax],al
  4064f0:	00 00                	add    BYTE PTR [rax],al
  4064f2:	00 00                	add    BYTE PTR [rax],al
  4064f4:	00 01                	add    BYTE PTR [rcx],al
  4064f6:	00 00                	add    BYTE PTR [rax],al
  4064f8:	47                   	rex.RXB
  4064f9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  4064fd:	61                   	(bad)  
  4064fe:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406501:	72 65                	jb     406568 <__TMC_END__+0x2540>
  406503:	61                   	(bad)  
  406504:	6c                   	ins    BYTE PTR es:[rdi],dx
  406505:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  40650c:	0b 00                	or     eax,DWORD PTR [rax]
  40650e:	00 00                	add    BYTE PTR [rax],al
  406510:	10 00                	adc    BYTE PTR [rax],al
  406512:	00 00                	add    BYTE PTR [rax],al
  406514:	00 01                	add    BYTE PTR [rcx],al
  406516:	00 00                	add    BYTE PTR [rax],al
  406518:	47                   	rex.RXB
  406519:	41 24 01             	rex.B and al,0x1
  40651c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40651f:	30 39                	xor    BYTE PTR [rcx],bh
  406521:	32 00                	xor    al,BYTE PTR [rax]
  406523:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406526:	40 00 00             	rex add BYTE PTR [rax],al
  406529:	00 00                	add    BYTE PTR [rax],al
  40652b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40652e:	40 00 00             	rex add BYTE PTR [rax],al
  406531:	00 00                	add    BYTE PTR [rax],al
  406533:	00 20                	add    BYTE PTR [rax],ah
	...
  40653d:	01 00                	add    DWORD PTR [rax],eax
  40653f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406542:	24 05                	and    al,0x5
  406544:	72 75                	jb     4065bb <__TMC_END__+0x2593>
  406546:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406547:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406548:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40654f:	20 31                	and    BYTE PTR [rcx],dh
  406551:	32 2e                	xor    ch,BYTE PTR [rsi]
  406553:	32 2e                	xor    ch,BYTE PTR [rsi]
  406555:	31 20                	xor    DWORD PTR [rax],esp
  406557:	32 30                	xor    dh,BYTE PTR [rax]
  406559:	32 32                	xor    dh,BYTE PTR [rdx]
  40655b:	31 31                	xor    DWORD PTR [rcx],esi
  40655d:	32 31                	xor    dh,BYTE PTR [rcx]
  40655f:	00 20                	add    BYTE PTR [rax],ah
	...
  406569:	01 00                	add    DWORD PTR [rax],eax
  40656b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40656e:	24 05                	and    al,0x5
  406570:	61                   	(bad)  
  406571:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406572:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406573:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406574:	62                   	(bad)  
  406575:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40657c:	31 32                	xor    DWORD PTR [rdx],esi
  40657e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406581:	31 20                	xor    DWORD PTR [rax],esp
  406583:	32 30                	xor    dh,BYTE PTR [rax]
  406585:	32 32                	xor    dh,BYTE PTR [rdx]
  406587:	30 38                	xor    BYTE PTR [rax],bh
  406589:	31 39                	xor    DWORD PTR [rcx],edi
  40658b:	00 19                	add    BYTE PTR [rcx],bl
	...
  406595:	01 00                	add    DWORD PTR [rax],eax
  406597:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40659a:	24 05                	and    al,0x5
  40659c:	70 6c                	jo     40660a <__TMC_END__+0x25e2>
  40659e:	75 67                	jne    406607 <__TMC_END__+0x25df>
  4065a0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  4065a7:	3a 20                	cmp    ah,BYTE PTR [rax]
  4065a9:	61                   	(bad)  
  4065aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4065ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4065ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4065ad:	62                   	(bad)  
  4065ae:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  4065bd:	01 00                	add    DWORD PTR [rax],eax
  4065bf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4065c2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  4065c5:	57                   	push   rdi
  4065c6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  4065ca:	00 00                	add    BYTE PTR [rax],al
  4065cc:	06                   	(bad)  
	...
  4065d5:	01 00                	add    DWORD PTR [rax],eax
  4065d7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4065da:	2a 02                	sub    al,BYTE PTR [rdx]
  4065dc:	03 00                	add    eax,DWORD PTR [rax]
  4065de:	00 00                	add    BYTE PTR [rax],al
  4065e0:	0f 00 00             	sldt   WORD PTR [rax]
  4065e3:	00 00                	add    BYTE PTR [rax],al
  4065e5:	00 00                	add    BYTE PTR [rax],al
  4065e7:	00 00                	add    BYTE PTR [rax],al
  4065e9:	01 00                	add    DWORD PTR [rax],eax
  4065eb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4065ee:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  4065f1:	61                   	(bad)  
  4065f2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4065f5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4065f9:	68 00 00 13 00       	push   0x130000
  4065fe:	00 00                	add    BYTE PTR [rax],al
  406600:	00 00                	add    BYTE PTR [rax],al
  406602:	00 00                	add    BYTE PTR [rax],al
  406604:	00 01                	add    BYTE PTR [rcx],al
  406606:	00 00                	add    BYTE PTR [rax],al
  406608:	47                   	rex.RXB
  406609:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40660d:	5f                   	pop    rdi
  40660e:	70 72                	jo     406682 <__TMC_END__+0x265a>
  406610:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406611:	74 65                	je     406678 <__TMC_END__+0x2650>
  406613:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406617:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406618:	00 08                	add    BYTE PTR [rax],cl
  40661a:	00 00                	add    BYTE PTR [rax],al
  40661c:	0d 00 00 00 00       	or     eax,0x0
  406621:	00 00                	add    BYTE PTR [rax],al
  406623:	00 00                	add    BYTE PTR [rax],al
  406625:	01 00                	add    DWORD PTR [rax],eax
  406627:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40662a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40662d:	52                   	push   rdx
  40662e:	54                   	push   rsp
  40662f:	49                   	rex.WB
  406630:	46 59                	rex.RX pop rcx
  406632:	00 ff                	add    bh,bh
  406634:	00 00                	add    BYTE PTR [rax],al
  406636:	00 00                	add    BYTE PTR [rax],al
  406638:	16                   	(bad)  
	...
  406641:	01 00                	add    DWORD PTR [rax],eax
  406643:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406646:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406649:	49                   	rex.WB
  40664a:	42                   	rex.X
  40664b:	43 58                	rex.XB pop r8
  40664d:	58                   	pop    rax
  40664e:	5f                   	pop    rdi
  40664f:	41 53                	push   r11
  406651:	53                   	push   rbx
  406652:	45 52                	rex.RB push r10
  406654:	54                   	push   rsp
  406655:	49                   	rex.WB
  406656:	4f                   	rex.WRXB
  406657:	4e 53                	rex.WRX push rbx
  406659:	00 00                	add    BYTE PTR [rax],al
  40665b:	00 06                	add    BYTE PTR [rsi],al
	...
  406665:	01 00                	add    DWORD PTR [rax],eax
  406667:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40666a:	2a 07                	sub    al,BYTE PTR [rdi]
  40666c:	03 00                	add    eax,DWORD PTR [rax]
  40666e:	00 00                	add    BYTE PTR [rax],al
  406670:	05 00 00 00 00       	add    eax,0x0
  406675:	00 00                	add    BYTE PTR [rax],al
  406677:	00 00                	add    BYTE PTR [rax],al
  406679:	01 00                	add    DWORD PTR [rax],eax
  40667b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40667e:	21 08                	and    DWORD PTR [rax],ecx
  406680:	00 00                	add    BYTE PTR [rax],al
  406682:	00 00                	add    BYTE PTR [rax],al
  406684:	16                   	(bad)  
	...
  40668d:	01 00                	add    DWORD PTR [rax],eax
  40668f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406692:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406695:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  40669c:	65 
  40669d:	5f                   	pop    rdi
  40669e:	70 6f                	jo     40670f <__TMC_END__+0x26e7>
  4066a0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  4066a7:	00 06                	add    BYTE PTR [rsi],al
	...
  4066b1:	01 00                	add    DWORD PTR [rax],eax
  4066b3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4066b6:	2a 06                	sub    al,BYTE PTR [rsi]
  4066b8:	12 00                	adc    al,BYTE PTR [rax]
  4066ba:	00 00                	add    BYTE PTR [rax],al
  4066bc:	11 00                	adc    DWORD PTR [rax],eax
  4066be:	00 00                	add    BYTE PTR [rax],al
  4066c0:	00 00                	add    BYTE PTR [rax],al
  4066c2:	00 00                	add    BYTE PTR [rax],al
  4066c4:	00 01                	add    BYTE PTR [rcx],al
  4066c6:	00 00                	add    BYTE PTR [rax],al
  4066c8:	47                   	rex.RXB
  4066c9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  4066cd:	61                   	(bad)  
  4066ce:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4066d1:	72 65                	jb     406738 <__TMC_END__+0x2710>
  4066d3:	61                   	(bad)  
  4066d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4066d5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  4066dc:	0b 00                	or     eax,DWORD PTR [rax]
  4066de:	00 00                	add    BYTE PTR [rax],al
  4066e0:	10 00                	adc    BYTE PTR [rax],al
  4066e2:	00 00                	add    BYTE PTR [rax],al
  4066e4:	00 01                	add    BYTE PTR [rcx],al
  4066e6:	00 00                	add    BYTE PTR [rax],al
  4066e8:	47                   	rex.RXB
  4066e9:	41 24 01             	rex.B and al,0x1
  4066ec:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  4066ef:	30 39                	xor    BYTE PTR [rcx],bh
  4066f1:	32 00                	xor    al,BYTE PTR [rax]
  4066f3:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4066f6:	40 00 00             	rex add BYTE PTR [rax],al
  4066f9:	00 00                	add    BYTE PTR [rax],al
  4066fb:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4066fe:	40 00 00             	rex add BYTE PTR [rax],al
  406701:	00 00                	add    BYTE PTR [rax],al
  406703:	00 20                	add    BYTE PTR [rax],ah
	...
  40670d:	01 00                	add    DWORD PTR [rax],eax
  40670f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406712:	24 05                	and    al,0x5
  406714:	72 75                	jb     40678b <__TMC_END__+0x2763>
  406716:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406717:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406718:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40671f:	20 31                	and    BYTE PTR [rcx],dh
  406721:	32 2e                	xor    ch,BYTE PTR [rsi]
  406723:	32 2e                	xor    ch,BYTE PTR [rsi]
  406725:	31 20                	xor    DWORD PTR [rax],esp
  406727:	32 30                	xor    dh,BYTE PTR [rax]
  406729:	32 32                	xor    dh,BYTE PTR [rdx]
  40672b:	31 31                	xor    DWORD PTR [rcx],esi
  40672d:	32 31                	xor    dh,BYTE PTR [rcx]
  40672f:	00 20                	add    BYTE PTR [rax],ah
	...
  406739:	01 00                	add    DWORD PTR [rax],eax
  40673b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40673e:	24 05                	and    al,0x5
  406740:	61                   	(bad)  
  406741:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406742:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406743:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406744:	62                   	(bad)  
  406745:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40674c:	31 32                	xor    DWORD PTR [rdx],esi
  40674e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406751:	31 20                	xor    DWORD PTR [rax],esp
  406753:	32 30                	xor    dh,BYTE PTR [rax]
  406755:	32 32                	xor    dh,BYTE PTR [rdx]
  406757:	30 38                	xor    BYTE PTR [rax],bh
  406759:	31 39                	xor    DWORD PTR [rcx],edi
  40675b:	00 19                	add    BYTE PTR [rcx],bl
	...
  406765:	01 00                	add    DWORD PTR [rax],eax
  406767:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40676a:	24 05                	and    al,0x5
  40676c:	70 6c                	jo     4067da <__TMC_END__+0x27b2>
  40676e:	75 67                	jne    4067d7 <__TMC_END__+0x27af>
  406770:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406777:	3a 20                	cmp    ah,BYTE PTR [rax]
  406779:	61                   	(bad)  
  40677a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40677b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40677c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40677d:	62                   	(bad)  
  40677e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40678d:	01 00                	add    DWORD PTR [rax],eax
  40678f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406792:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406795:	57                   	push   rdi
  406796:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40679a:	00 00                	add    BYTE PTR [rax],al
  40679c:	06                   	(bad)  
	...
  4067a5:	01 00                	add    DWORD PTR [rax],eax
  4067a7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4067aa:	2a 02                	sub    al,BYTE PTR [rdx]
  4067ac:	03 00                	add    eax,DWORD PTR [rax]
  4067ae:	00 00                	add    BYTE PTR [rax],al
  4067b0:	0f 00 00             	sldt   WORD PTR [rax]
  4067b3:	00 00                	add    BYTE PTR [rax],al
  4067b5:	00 00                	add    BYTE PTR [rax],al
  4067b7:	00 00                	add    BYTE PTR [rax],al
  4067b9:	01 00                	add    DWORD PTR [rax],eax
  4067bb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4067be:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  4067c1:	61                   	(bad)  
  4067c2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4067c5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4067c9:	68 00 00 13 00       	push   0x130000
  4067ce:	00 00                	add    BYTE PTR [rax],al
  4067d0:	00 00                	add    BYTE PTR [rax],al
  4067d2:	00 00                	add    BYTE PTR [rax],al
  4067d4:	00 01                	add    BYTE PTR [rcx],al
  4067d6:	00 00                	add    BYTE PTR [rax],al
  4067d8:	47                   	rex.RXB
  4067d9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  4067dd:	5f                   	pop    rdi
  4067de:	70 72                	jo     406852 <__TMC_END__+0x282a>
  4067e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4067e1:	74 65                	je     406848 <__TMC_END__+0x2820>
  4067e3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4067e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4067e8:	00 08                	add    BYTE PTR [rax],cl
  4067ea:	00 00                	add    BYTE PTR [rax],al
  4067ec:	0d 00 00 00 00       	or     eax,0x0
  4067f1:	00 00                	add    BYTE PTR [rax],al
  4067f3:	00 00                	add    BYTE PTR [rax],al
  4067f5:	01 00                	add    DWORD PTR [rax],eax
  4067f7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4067fa:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  4067fd:	52                   	push   rdx
  4067fe:	54                   	push   rsp
  4067ff:	49                   	rex.WB
  406800:	46 59                	rex.RX pop rcx
  406802:	00 ff                	add    bh,bh
  406804:	00 00                	add    BYTE PTR [rax],al
  406806:	00 00                	add    BYTE PTR [rax],al
  406808:	16                   	(bad)  
	...
  406811:	01 00                	add    DWORD PTR [rax],eax
  406813:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406816:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406819:	49                   	rex.WB
  40681a:	42                   	rex.X
  40681b:	43 58                	rex.XB pop r8
  40681d:	58                   	pop    rax
  40681e:	5f                   	pop    rdi
  40681f:	41 53                	push   r11
  406821:	53                   	push   rbx
  406822:	45 52                	rex.RB push r10
  406824:	54                   	push   rsp
  406825:	49                   	rex.WB
  406826:	4f                   	rex.WRXB
  406827:	4e 53                	rex.WRX push rbx
  406829:	00 00                	add    BYTE PTR [rax],al
  40682b:	00 06                	add    BYTE PTR [rsi],al
	...
  406835:	01 00                	add    DWORD PTR [rax],eax
  406837:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40683a:	2a 07                	sub    al,BYTE PTR [rdi]
  40683c:	03 00                	add    eax,DWORD PTR [rax]
  40683e:	00 00                	add    BYTE PTR [rax],al
  406840:	05 00 00 00 00       	add    eax,0x0
  406845:	00 00                	add    BYTE PTR [rax],al
  406847:	00 00                	add    BYTE PTR [rax],al
  406849:	01 00                	add    DWORD PTR [rax],eax
  40684b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40684e:	21 08                	and    DWORD PTR [rax],ecx
  406850:	00 00                	add    BYTE PTR [rax],al
  406852:	00 00                	add    BYTE PTR [rax],al
  406854:	16                   	(bad)  
	...
  40685d:	01 00                	add    DWORD PTR [rax],eax
  40685f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406862:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406865:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  40686c:	65 
  40686d:	5f                   	pop    rdi
  40686e:	70 6f                	jo     4068df <__TMC_END__+0x28b7>
  406870:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406877:	00 06                	add    BYTE PTR [rsi],al
	...
  406881:	01 00                	add    DWORD PTR [rax],eax
  406883:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406886:	2a 06                	sub    al,BYTE PTR [rsi]
  406888:	12 00                	adc    al,BYTE PTR [rax]
  40688a:	00 00                	add    BYTE PTR [rax],al
  40688c:	11 00                	adc    DWORD PTR [rax],eax
  40688e:	00 00                	add    BYTE PTR [rax],al
  406890:	00 00                	add    BYTE PTR [rax],al
  406892:	00 00                	add    BYTE PTR [rax],al
  406894:	00 01                	add    BYTE PTR [rcx],al
  406896:	00 00                	add    BYTE PTR [rax],al
  406898:	47                   	rex.RXB
  406899:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  40689d:	61                   	(bad)  
  40689e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4068a1:	72 65                	jb     406908 <__TMC_END__+0x28e0>
  4068a3:	61                   	(bad)  
  4068a4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4068a5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  4068ac:	0b 00                	or     eax,DWORD PTR [rax]
  4068ae:	00 00                	add    BYTE PTR [rax],al
  4068b0:	10 00                	adc    BYTE PTR [rax],al
  4068b2:	00 00                	add    BYTE PTR [rax],al
  4068b4:	00 01                	add    BYTE PTR [rcx],al
  4068b6:	00 00                	add    BYTE PTR [rax],al
  4068b8:	47                   	rex.RXB
  4068b9:	41 24 01             	rex.B and al,0x1
  4068bc:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  4068bf:	30 39                	xor    BYTE PTR [rcx],bh
  4068c1:	32 00                	xor    al,BYTE PTR [rax]
  4068c3:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4068c6:	40 00 00             	rex add BYTE PTR [rax],al
  4068c9:	00 00                	add    BYTE PTR [rax],al
  4068cb:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4068ce:	40 00 00             	rex add BYTE PTR [rax],al
  4068d1:	00 00                	add    BYTE PTR [rax],al
  4068d3:	00 20                	add    BYTE PTR [rax],ah
	...
  4068dd:	01 00                	add    DWORD PTR [rax],eax
  4068df:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4068e2:	24 05                	and    al,0x5
  4068e4:	72 75                	jb     40695b <__TMC_END__+0x2933>
  4068e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4068e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4068e8:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  4068ef:	20 31                	and    BYTE PTR [rcx],dh
  4068f1:	32 2e                	xor    ch,BYTE PTR [rsi]
  4068f3:	32 2e                	xor    ch,BYTE PTR [rsi]
  4068f5:	31 20                	xor    DWORD PTR [rax],esp
  4068f7:	32 30                	xor    dh,BYTE PTR [rax]
  4068f9:	32 32                	xor    dh,BYTE PTR [rdx]
  4068fb:	31 31                	xor    DWORD PTR [rcx],esi
  4068fd:	32 31                	xor    dh,BYTE PTR [rcx]
  4068ff:	00 20                	add    BYTE PTR [rax],ah
	...
  406909:	01 00                	add    DWORD PTR [rax],eax
  40690b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40690e:	24 05                	and    al,0x5
  406910:	61                   	(bad)  
  406911:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406912:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406913:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406914:	62                   	(bad)  
  406915:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40691c:	31 32                	xor    DWORD PTR [rdx],esi
  40691e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406921:	31 20                	xor    DWORD PTR [rax],esp
  406923:	32 30                	xor    dh,BYTE PTR [rax]
  406925:	32 32                	xor    dh,BYTE PTR [rdx]
  406927:	30 38                	xor    BYTE PTR [rax],bh
  406929:	31 39                	xor    DWORD PTR [rcx],edi
  40692b:	00 19                	add    BYTE PTR [rcx],bl
	...
  406935:	01 00                	add    DWORD PTR [rax],eax
  406937:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40693a:	24 05                	and    al,0x5
  40693c:	70 6c                	jo     4069aa <__TMC_END__+0x2982>
  40693e:	75 67                	jne    4069a7 <__TMC_END__+0x297f>
  406940:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406947:	3a 20                	cmp    ah,BYTE PTR [rax]
  406949:	61                   	(bad)  
  40694a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40694b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40694c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40694d:	62                   	(bad)  
  40694e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40695d:	01 00                	add    DWORD PTR [rax],eax
  40695f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406962:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406965:	57                   	push   rdi
  406966:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40696a:	00 00                	add    BYTE PTR [rax],al
  40696c:	06                   	(bad)  
	...
  406975:	01 00                	add    DWORD PTR [rax],eax
  406977:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40697a:	2a 02                	sub    al,BYTE PTR [rdx]
  40697c:	03 00                	add    eax,DWORD PTR [rax]
  40697e:	00 00                	add    BYTE PTR [rax],al
  406980:	0f 00 00             	sldt   WORD PTR [rax]
  406983:	00 00                	add    BYTE PTR [rax],al
  406985:	00 00                	add    BYTE PTR [rax],al
  406987:	00 00                	add    BYTE PTR [rax],al
  406989:	01 00                	add    DWORD PTR [rax],eax
  40698b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40698e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406991:	61                   	(bad)  
  406992:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406995:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406999:	68 00 00 13 00       	push   0x130000
  40699e:	00 00                	add    BYTE PTR [rax],al
  4069a0:	00 00                	add    BYTE PTR [rax],al
  4069a2:	00 00                	add    BYTE PTR [rax],al
  4069a4:	00 01                	add    BYTE PTR [rcx],al
  4069a6:	00 00                	add    BYTE PTR [rax],al
  4069a8:	47                   	rex.RXB
  4069a9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  4069ad:	5f                   	pop    rdi
  4069ae:	70 72                	jo     406a22 <__TMC_END__+0x29fa>
  4069b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4069b1:	74 65                	je     406a18 <__TMC_END__+0x29f0>
  4069b3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4069b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4069b8:	00 08                	add    BYTE PTR [rax],cl
  4069ba:	00 00                	add    BYTE PTR [rax],al
  4069bc:	0d 00 00 00 00       	or     eax,0x0
  4069c1:	00 00                	add    BYTE PTR [rax],al
  4069c3:	00 00                	add    BYTE PTR [rax],al
  4069c5:	01 00                	add    DWORD PTR [rax],eax
  4069c7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4069ca:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  4069cd:	52                   	push   rdx
  4069ce:	54                   	push   rsp
  4069cf:	49                   	rex.WB
  4069d0:	46 59                	rex.RX pop rcx
  4069d2:	00 ff                	add    bh,bh
  4069d4:	00 00                	add    BYTE PTR [rax],al
  4069d6:	00 00                	add    BYTE PTR [rax],al
  4069d8:	16                   	(bad)  
	...
  4069e1:	01 00                	add    DWORD PTR [rax],eax
  4069e3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4069e6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  4069e9:	49                   	rex.WB
  4069ea:	42                   	rex.X
  4069eb:	43 58                	rex.XB pop r8
  4069ed:	58                   	pop    rax
  4069ee:	5f                   	pop    rdi
  4069ef:	41 53                	push   r11
  4069f1:	53                   	push   rbx
  4069f2:	45 52                	rex.RB push r10
  4069f4:	54                   	push   rsp
  4069f5:	49                   	rex.WB
  4069f6:	4f                   	rex.WRXB
  4069f7:	4e 53                	rex.WRX push rbx
  4069f9:	00 00                	add    BYTE PTR [rax],al
  4069fb:	00 06                	add    BYTE PTR [rsi],al
	...
  406a05:	01 00                	add    DWORD PTR [rax],eax
  406a07:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406a0a:	2a 07                	sub    al,BYTE PTR [rdi]
  406a0c:	03 00                	add    eax,DWORD PTR [rax]
  406a0e:	00 00                	add    BYTE PTR [rax],al
  406a10:	05 00 00 00 00       	add    eax,0x0
  406a15:	00 00                	add    BYTE PTR [rax],al
  406a17:	00 00                	add    BYTE PTR [rax],al
  406a19:	01 00                	add    DWORD PTR [rax],eax
  406a1b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406a1e:	21 08                	and    DWORD PTR [rax],ecx
  406a20:	00 00                	add    BYTE PTR [rax],al
  406a22:	00 00                	add    BYTE PTR [rax],al
  406a24:	16                   	(bad)  
	...
  406a2d:	01 00                	add    DWORD PTR [rax],eax
  406a2f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406a32:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406a35:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  406a3c:	65 
  406a3d:	5f                   	pop    rdi
  406a3e:	70 6f                	jo     406aaf <__TMC_END__+0x2a87>
  406a40:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406a47:	00 06                	add    BYTE PTR [rsi],al
	...
  406a51:	01 00                	add    DWORD PTR [rax],eax
  406a53:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406a56:	2a 06                	sub    al,BYTE PTR [rsi]
  406a58:	12 00                	adc    al,BYTE PTR [rax]
  406a5a:	00 00                	add    BYTE PTR [rax],al
  406a5c:	11 00                	adc    DWORD PTR [rax],eax
  406a5e:	00 00                	add    BYTE PTR [rax],al
  406a60:	00 00                	add    BYTE PTR [rax],al
  406a62:	00 00                	add    BYTE PTR [rax],al
  406a64:	00 01                	add    BYTE PTR [rcx],al
  406a66:	00 00                	add    BYTE PTR [rax],al
  406a68:	47                   	rex.RXB
  406a69:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  406a6d:	61                   	(bad)  
  406a6e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406a71:	72 65                	jb     406ad8 <__TMC_END__+0x2ab0>
  406a73:	61                   	(bad)  
  406a74:	6c                   	ins    BYTE PTR es:[rdi],dx
  406a75:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  406a7c:	0b 00                	or     eax,DWORD PTR [rax]
  406a7e:	00 00                	add    BYTE PTR [rax],al
  406a80:	10 00                	adc    BYTE PTR [rax],al
  406a82:	00 00                	add    BYTE PTR [rax],al
  406a84:	00 01                	add    BYTE PTR [rcx],al
  406a86:	00 00                	add    BYTE PTR [rax],al
  406a88:	47                   	rex.RXB
  406a89:	41 24 01             	rex.B and al,0x1
  406a8c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  406a8f:	30 39                	xor    BYTE PTR [rcx],bh
  406a91:	32 00                	xor    al,BYTE PTR [rax]
  406a93:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406a96:	40 00 00             	rex add BYTE PTR [rax],al
  406a99:	00 00                	add    BYTE PTR [rax],al
  406a9b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406a9e:	40 00 00             	rex add BYTE PTR [rax],al
  406aa1:	00 00                	add    BYTE PTR [rax],al
  406aa3:	00 20                	add    BYTE PTR [rax],ah
	...
  406aad:	01 00                	add    DWORD PTR [rax],eax
  406aaf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406ab2:	24 05                	and    al,0x5
  406ab4:	72 75                	jb     406b2b <__TMC_END__+0x2b03>
  406ab6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ab7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ab8:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  406abf:	20 31                	and    BYTE PTR [rcx],dh
  406ac1:	32 2e                	xor    ch,BYTE PTR [rsi]
  406ac3:	32 2e                	xor    ch,BYTE PTR [rsi]
  406ac5:	31 20                	xor    DWORD PTR [rax],esp
  406ac7:	32 30                	xor    dh,BYTE PTR [rax]
  406ac9:	32 32                	xor    dh,BYTE PTR [rdx]
  406acb:	31 31                	xor    DWORD PTR [rcx],esi
  406acd:	32 31                	xor    dh,BYTE PTR [rcx]
  406acf:	00 20                	add    BYTE PTR [rax],ah
	...
  406ad9:	01 00                	add    DWORD PTR [rax],eax
  406adb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406ade:	24 05                	and    al,0x5
  406ae0:	61                   	(bad)  
  406ae1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ae2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ae3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406ae4:	62                   	(bad)  
  406ae5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  406aec:	31 32                	xor    DWORD PTR [rdx],esi
  406aee:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406af1:	31 20                	xor    DWORD PTR [rax],esp
  406af3:	32 30                	xor    dh,BYTE PTR [rax]
  406af5:	32 32                	xor    dh,BYTE PTR [rdx]
  406af7:	30 38                	xor    BYTE PTR [rax],bh
  406af9:	31 39                	xor    DWORD PTR [rcx],edi
  406afb:	00 19                	add    BYTE PTR [rcx],bl
	...
  406b05:	01 00                	add    DWORD PTR [rax],eax
  406b07:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406b0a:	24 05                	and    al,0x5
  406b0c:	70 6c                	jo     406b7a <__TMC_END__+0x2b52>
  406b0e:	75 67                	jne    406b77 <__TMC_END__+0x2b4f>
  406b10:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406b17:	3a 20                	cmp    ah,BYTE PTR [rax]
  406b19:	61                   	(bad)  
  406b1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406b1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406b1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406b1d:	62                   	(bad)  
  406b1e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  406b2d:	01 00                	add    DWORD PTR [rax],eax
  406b2f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406b32:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406b35:	57                   	push   rdi
  406b36:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  406b3a:	00 00                	add    BYTE PTR [rax],al
  406b3c:	06                   	(bad)  
	...
  406b45:	01 00                	add    DWORD PTR [rax],eax
  406b47:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406b4a:	2a 02                	sub    al,BYTE PTR [rdx]
  406b4c:	03 00                	add    eax,DWORD PTR [rax]
  406b4e:	00 00                	add    BYTE PTR [rax],al
  406b50:	0f 00 00             	sldt   WORD PTR [rax]
  406b53:	00 00                	add    BYTE PTR [rax],al
  406b55:	00 00                	add    BYTE PTR [rax],al
  406b57:	00 00                	add    BYTE PTR [rax],al
  406b59:	01 00                	add    DWORD PTR [rax],eax
  406b5b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406b5e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406b61:	61                   	(bad)  
  406b62:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406b65:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406b69:	68 00 00 13 00       	push   0x130000
  406b6e:	00 00                	add    BYTE PTR [rax],al
  406b70:	00 00                	add    BYTE PTR [rax],al
  406b72:	00 00                	add    BYTE PTR [rax],al
  406b74:	00 01                	add    BYTE PTR [rcx],al
  406b76:	00 00                	add    BYTE PTR [rax],al
  406b78:	47                   	rex.RXB
  406b79:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  406b7d:	5f                   	pop    rdi
  406b7e:	70 72                	jo     406bf2 <__TMC_END__+0x2bca>
  406b80:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406b81:	74 65                	je     406be8 <__TMC_END__+0x2bc0>
  406b83:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406b87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406b88:	00 08                	add    BYTE PTR [rax],cl
  406b8a:	00 00                	add    BYTE PTR [rax],al
  406b8c:	0d 00 00 00 00       	or     eax,0x0
  406b91:	00 00                	add    BYTE PTR [rax],al
  406b93:	00 00                	add    BYTE PTR [rax],al
  406b95:	01 00                	add    DWORD PTR [rax],eax
  406b97:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406b9a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  406b9d:	52                   	push   rdx
  406b9e:	54                   	push   rsp
  406b9f:	49                   	rex.WB
  406ba0:	46 59                	rex.RX pop rcx
  406ba2:	00 ff                	add    bh,bh
  406ba4:	00 00                	add    BYTE PTR [rax],al
  406ba6:	00 00                	add    BYTE PTR [rax],al
  406ba8:	16                   	(bad)  
	...
  406bb1:	01 00                	add    DWORD PTR [rax],eax
  406bb3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406bb6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406bb9:	49                   	rex.WB
  406bba:	42                   	rex.X
  406bbb:	43 58                	rex.XB pop r8
  406bbd:	58                   	pop    rax
  406bbe:	5f                   	pop    rdi
  406bbf:	41 53                	push   r11
  406bc1:	53                   	push   rbx
  406bc2:	45 52                	rex.RB push r10
  406bc4:	54                   	push   rsp
  406bc5:	49                   	rex.WB
  406bc6:	4f                   	rex.WRXB
  406bc7:	4e 53                	rex.WRX push rbx
  406bc9:	00 00                	add    BYTE PTR [rax],al
  406bcb:	00 06                	add    BYTE PTR [rsi],al
	...
  406bd5:	01 00                	add    DWORD PTR [rax],eax
  406bd7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406bda:	2a 07                	sub    al,BYTE PTR [rdi]
  406bdc:	03 00                	add    eax,DWORD PTR [rax]
  406bde:	00 00                	add    BYTE PTR [rax],al
  406be0:	05 00 00 00 00       	add    eax,0x0
  406be5:	00 00                	add    BYTE PTR [rax],al
  406be7:	00 00                	add    BYTE PTR [rax],al
  406be9:	01 00                	add    DWORD PTR [rax],eax
  406beb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406bee:	21 08                	and    DWORD PTR [rax],ecx
  406bf0:	00 00                	add    BYTE PTR [rax],al
  406bf2:	00 00                	add    BYTE PTR [rax],al
  406bf4:	16                   	(bad)  
	...
  406bfd:	01 00                	add    DWORD PTR [rax],eax
  406bff:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406c02:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406c05:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  406c0c:	65 
  406c0d:	5f                   	pop    rdi
  406c0e:	70 6f                	jo     406c7f <__TMC_END__+0x2c57>
  406c10:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406c17:	00 06                	add    BYTE PTR [rsi],al
	...
  406c21:	01 00                	add    DWORD PTR [rax],eax
  406c23:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406c26:	2a 06                	sub    al,BYTE PTR [rsi]
  406c28:	12 00                	adc    al,BYTE PTR [rax]
  406c2a:	00 00                	add    BYTE PTR [rax],al
  406c2c:	11 00                	adc    DWORD PTR [rax],eax
  406c2e:	00 00                	add    BYTE PTR [rax],al
  406c30:	00 00                	add    BYTE PTR [rax],al
  406c32:	00 00                	add    BYTE PTR [rax],al
  406c34:	00 01                	add    BYTE PTR [rcx],al
  406c36:	00 00                	add    BYTE PTR [rax],al
  406c38:	47                   	rex.RXB
  406c39:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  406c3d:	61                   	(bad)  
  406c3e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406c41:	72 65                	jb     406ca8 <__TMC_END__+0x2c80>
  406c43:	61                   	(bad)  
  406c44:	6c                   	ins    BYTE PTR es:[rdi],dx
  406c45:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  406c4c:	0b 00                	or     eax,DWORD PTR [rax]
  406c4e:	00 00                	add    BYTE PTR [rax],al
  406c50:	10 00                	adc    BYTE PTR [rax],al
  406c52:	00 00                	add    BYTE PTR [rax],al
  406c54:	00 01                	add    BYTE PTR [rcx],al
  406c56:	00 00                	add    BYTE PTR [rax],al
  406c58:	47                   	rex.RXB
  406c59:	41 24 01             	rex.B and al,0x1
  406c5c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  406c5f:	30 39                	xor    BYTE PTR [rcx],bh
  406c61:	32 00                	xor    al,BYTE PTR [rax]
  406c63:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406c66:	40 00 00             	rex add BYTE PTR [rax],al
  406c69:	00 00                	add    BYTE PTR [rax],al
  406c6b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406c6e:	40 00 00             	rex add BYTE PTR [rax],al
  406c71:	00 00                	add    BYTE PTR [rax],al
  406c73:	00 20                	add    BYTE PTR [rax],ah
	...
  406c7d:	01 00                	add    DWORD PTR [rax],eax
  406c7f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406c82:	24 05                	and    al,0x5
  406c84:	72 75                	jb     406cfb <__TMC_END__+0x2cd3>
  406c86:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406c87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406c88:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  406c8f:	20 31                	and    BYTE PTR [rcx],dh
  406c91:	32 2e                	xor    ch,BYTE PTR [rsi]
  406c93:	32 2e                	xor    ch,BYTE PTR [rsi]
  406c95:	31 20                	xor    DWORD PTR [rax],esp
  406c97:	32 30                	xor    dh,BYTE PTR [rax]
  406c99:	32 32                	xor    dh,BYTE PTR [rdx]
  406c9b:	31 31                	xor    DWORD PTR [rcx],esi
  406c9d:	32 31                	xor    dh,BYTE PTR [rcx]
  406c9f:	00 20                	add    BYTE PTR [rax],ah
	...
  406ca9:	01 00                	add    DWORD PTR [rax],eax
  406cab:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406cae:	24 05                	and    al,0x5
  406cb0:	61                   	(bad)  
  406cb1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406cb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406cb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406cb4:	62                   	(bad)  
  406cb5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  406cbc:	31 32                	xor    DWORD PTR [rdx],esi
  406cbe:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406cc1:	31 20                	xor    DWORD PTR [rax],esp
  406cc3:	32 30                	xor    dh,BYTE PTR [rax]
  406cc5:	32 32                	xor    dh,BYTE PTR [rdx]
  406cc7:	30 38                	xor    BYTE PTR [rax],bh
  406cc9:	31 39                	xor    DWORD PTR [rcx],edi
  406ccb:	00 19                	add    BYTE PTR [rcx],bl
	...
  406cd5:	01 00                	add    DWORD PTR [rax],eax
  406cd7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406cda:	24 05                	and    al,0x5
  406cdc:	70 6c                	jo     406d4a <__TMC_END__+0x2d22>
  406cde:	75 67                	jne    406d47 <__TMC_END__+0x2d1f>
  406ce0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406ce7:	3a 20                	cmp    ah,BYTE PTR [rax]
  406ce9:	61                   	(bad)  
  406cea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ceb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406cec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406ced:	62                   	(bad)  
  406cee:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  406cfd:	01 00                	add    DWORD PTR [rax],eax
  406cff:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406d02:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406d05:	57                   	push   rdi
  406d06:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  406d0a:	00 00                	add    BYTE PTR [rax],al
  406d0c:	06                   	(bad)  
	...
  406d15:	01 00                	add    DWORD PTR [rax],eax
  406d17:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406d1a:	2a 02                	sub    al,BYTE PTR [rdx]
  406d1c:	03 00                	add    eax,DWORD PTR [rax]
  406d1e:	00 00                	add    BYTE PTR [rax],al
  406d20:	0f 00 00             	sldt   WORD PTR [rax]
  406d23:	00 00                	add    BYTE PTR [rax],al
  406d25:	00 00                	add    BYTE PTR [rax],al
  406d27:	00 00                	add    BYTE PTR [rax],al
  406d29:	01 00                	add    DWORD PTR [rax],eax
  406d2b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406d2e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406d31:	61                   	(bad)  
  406d32:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406d35:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406d39:	68 00 00 13 00       	push   0x130000
  406d3e:	00 00                	add    BYTE PTR [rax],al
  406d40:	00 00                	add    BYTE PTR [rax],al
  406d42:	00 00                	add    BYTE PTR [rax],al
  406d44:	00 01                	add    BYTE PTR [rcx],al
  406d46:	00 00                	add    BYTE PTR [rax],al
  406d48:	47                   	rex.RXB
  406d49:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  406d4d:	5f                   	pop    rdi
  406d4e:	70 72                	jo     406dc2 <__TMC_END__+0x2d9a>
  406d50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406d51:	74 65                	je     406db8 <__TMC_END__+0x2d90>
  406d53:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406d57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406d58:	00 08                	add    BYTE PTR [rax],cl
  406d5a:	00 00                	add    BYTE PTR [rax],al
  406d5c:	0d 00 00 00 00       	or     eax,0x0
  406d61:	00 00                	add    BYTE PTR [rax],al
  406d63:	00 00                	add    BYTE PTR [rax],al
  406d65:	01 00                	add    DWORD PTR [rax],eax
  406d67:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406d6a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  406d6d:	52                   	push   rdx
  406d6e:	54                   	push   rsp
  406d6f:	49                   	rex.WB
  406d70:	46 59                	rex.RX pop rcx
  406d72:	00 ff                	add    bh,bh
  406d74:	00 00                	add    BYTE PTR [rax],al
  406d76:	00 00                	add    BYTE PTR [rax],al
  406d78:	16                   	(bad)  
	...
  406d81:	01 00                	add    DWORD PTR [rax],eax
  406d83:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406d86:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406d89:	49                   	rex.WB
  406d8a:	42                   	rex.X
  406d8b:	43 58                	rex.XB pop r8
  406d8d:	58                   	pop    rax
  406d8e:	5f                   	pop    rdi
  406d8f:	41 53                	push   r11
  406d91:	53                   	push   rbx
  406d92:	45 52                	rex.RB push r10
  406d94:	54                   	push   rsp
  406d95:	49                   	rex.WB
  406d96:	4f                   	rex.WRXB
  406d97:	4e 53                	rex.WRX push rbx
  406d99:	00 00                	add    BYTE PTR [rax],al
  406d9b:	00 06                	add    BYTE PTR [rsi],al
	...
  406da5:	01 00                	add    DWORD PTR [rax],eax
  406da7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406daa:	2a 07                	sub    al,BYTE PTR [rdi]
  406dac:	03 00                	add    eax,DWORD PTR [rax]
  406dae:	00 00                	add    BYTE PTR [rax],al
  406db0:	05 00 00 00 00       	add    eax,0x0
  406db5:	00 00                	add    BYTE PTR [rax],al
  406db7:	00 00                	add    BYTE PTR [rax],al
  406db9:	01 00                	add    DWORD PTR [rax],eax
  406dbb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406dbe:	21 08                	and    DWORD PTR [rax],ecx
  406dc0:	00 00                	add    BYTE PTR [rax],al
  406dc2:	00 00                	add    BYTE PTR [rax],al
  406dc4:	16                   	(bad)  
	...
  406dcd:	01 00                	add    DWORD PTR [rax],eax
  406dcf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406dd2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406dd5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  406ddc:	65 
  406ddd:	5f                   	pop    rdi
  406dde:	70 6f                	jo     406e4f <__TMC_END__+0x2e27>
  406de0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406de7:	00 06                	add    BYTE PTR [rsi],al
	...
  406df1:	01 00                	add    DWORD PTR [rax],eax
  406df3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406df6:	2a 06                	sub    al,BYTE PTR [rsi]
  406df8:	12 00                	adc    al,BYTE PTR [rax]
  406dfa:	00 00                	add    BYTE PTR [rax],al
  406dfc:	11 00                	adc    DWORD PTR [rax],eax
  406dfe:	00 00                	add    BYTE PTR [rax],al
  406e00:	00 00                	add    BYTE PTR [rax],al
  406e02:	00 00                	add    BYTE PTR [rax],al
  406e04:	00 01                	add    BYTE PTR [rcx],al
  406e06:	00 00                	add    BYTE PTR [rax],al
  406e08:	47                   	rex.RXB
  406e09:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  406e0d:	61                   	(bad)  
  406e0e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406e11:	72 65                	jb     406e78 <__TMC_END__+0x2e50>
  406e13:	61                   	(bad)  
  406e14:	6c                   	ins    BYTE PTR es:[rdi],dx
  406e15:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  406e1c:	0b 00                	or     eax,DWORD PTR [rax]
  406e1e:	00 00                	add    BYTE PTR [rax],al
  406e20:	10 00                	adc    BYTE PTR [rax],al
  406e22:	00 00                	add    BYTE PTR [rax],al
  406e24:	00 01                	add    BYTE PTR [rcx],al
  406e26:	00 00                	add    BYTE PTR [rax],al
  406e28:	47                   	rex.RXB
  406e29:	41 24 01             	rex.B and al,0x1
  406e2c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  406e2f:	30 39                	xor    BYTE PTR [rcx],bh
  406e31:	32 00                	xor    al,BYTE PTR [rax]
  406e33:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406e36:	40 00 00             	rex add BYTE PTR [rax],al
  406e39:	00 00                	add    BYTE PTR [rax],al
  406e3b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  406e3e:	40 00 00             	rex add BYTE PTR [rax],al
  406e41:	00 00                	add    BYTE PTR [rax],al
  406e43:	00 20                	add    BYTE PTR [rax],ah
	...
  406e4d:	01 00                	add    DWORD PTR [rax],eax
  406e4f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406e52:	24 05                	and    al,0x5
  406e54:	72 75                	jb     406ecb <__TMC_END__+0x2ea3>
  406e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406e57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406e58:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  406e5f:	20 31                	and    BYTE PTR [rcx],dh
  406e61:	32 2e                	xor    ch,BYTE PTR [rsi]
  406e63:	32 2e                	xor    ch,BYTE PTR [rsi]
  406e65:	31 20                	xor    DWORD PTR [rax],esp
  406e67:	32 30                	xor    dh,BYTE PTR [rax]
  406e69:	32 32                	xor    dh,BYTE PTR [rdx]
  406e6b:	31 31                	xor    DWORD PTR [rcx],esi
  406e6d:	32 31                	xor    dh,BYTE PTR [rcx]
  406e6f:	00 20                	add    BYTE PTR [rax],ah
	...
  406e79:	01 00                	add    DWORD PTR [rax],eax
  406e7b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406e7e:	24 05                	and    al,0x5
  406e80:	61                   	(bad)  
  406e81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406e82:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406e83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406e84:	62                   	(bad)  
  406e85:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  406e8c:	31 32                	xor    DWORD PTR [rdx],esi
  406e8e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  406e91:	31 20                	xor    DWORD PTR [rax],esp
  406e93:	32 30                	xor    dh,BYTE PTR [rax]
  406e95:	32 32                	xor    dh,BYTE PTR [rdx]
  406e97:	30 38                	xor    BYTE PTR [rax],bh
  406e99:	31 39                	xor    DWORD PTR [rcx],edi
  406e9b:	00 19                	add    BYTE PTR [rcx],bl
	...
  406ea5:	01 00                	add    DWORD PTR [rax],eax
  406ea7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406eaa:	24 05                	and    al,0x5
  406eac:	70 6c                	jo     406f1a <__TMC_END__+0x2ef2>
  406eae:	75 67                	jne    406f17 <__TMC_END__+0x2eef>
  406eb0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  406eb7:	3a 20                	cmp    ah,BYTE PTR [rax]
  406eb9:	61                   	(bad)  
  406eba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ebb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406ebc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406ebd:	62                   	(bad)  
  406ebe:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  406ecd:	01 00                	add    DWORD PTR [rax],eax
  406ecf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406ed2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  406ed5:	57                   	push   rdi
  406ed6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  406eda:	00 00                	add    BYTE PTR [rax],al
  406edc:	06                   	(bad)  
	...
  406ee5:	01 00                	add    DWORD PTR [rax],eax
  406ee7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406eea:	2a 02                	sub    al,BYTE PTR [rdx]
  406eec:	03 00                	add    eax,DWORD PTR [rax]
  406eee:	00 00                	add    BYTE PTR [rax],al
  406ef0:	0f 00 00             	sldt   WORD PTR [rax]
  406ef3:	00 00                	add    BYTE PTR [rax],al
  406ef5:	00 00                	add    BYTE PTR [rax],al
  406ef7:	00 00                	add    BYTE PTR [rax],al
  406ef9:	01 00                	add    DWORD PTR [rax],eax
  406efb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406efe:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  406f01:	61                   	(bad)  
  406f02:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406f05:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  406f09:	68 00 00 13 00       	push   0x130000
  406f0e:	00 00                	add    BYTE PTR [rax],al
  406f10:	00 00                	add    BYTE PTR [rax],al
  406f12:	00 00                	add    BYTE PTR [rax],al
  406f14:	00 01                	add    BYTE PTR [rcx],al
  406f16:	00 00                	add    BYTE PTR [rax],al
  406f18:	47                   	rex.RXB
  406f19:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  406f1d:	5f                   	pop    rdi
  406f1e:	70 72                	jo     406f92 <__TMC_END__+0x2f6a>
  406f20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  406f21:	74 65                	je     406f88 <__TMC_END__+0x2f60>
  406f23:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  406f27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  406f28:	00 08                	add    BYTE PTR [rax],cl
  406f2a:	00 00                	add    BYTE PTR [rax],al
  406f2c:	0d 00 00 00 00       	or     eax,0x0
  406f31:	00 00                	add    BYTE PTR [rax],al
  406f33:	00 00                	add    BYTE PTR [rax],al
  406f35:	01 00                	add    DWORD PTR [rax],eax
  406f37:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406f3a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  406f3d:	52                   	push   rdx
  406f3e:	54                   	push   rsp
  406f3f:	49                   	rex.WB
  406f40:	46 59                	rex.RX pop rcx
  406f42:	00 ff                	add    bh,bh
  406f44:	00 00                	add    BYTE PTR [rax],al
  406f46:	00 00                	add    BYTE PTR [rax],al
  406f48:	16                   	(bad)  
	...
  406f51:	01 00                	add    DWORD PTR [rax],eax
  406f53:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406f56:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  406f59:	49                   	rex.WB
  406f5a:	42                   	rex.X
  406f5b:	43 58                	rex.XB pop r8
  406f5d:	58                   	pop    rax
  406f5e:	5f                   	pop    rdi
  406f5f:	41 53                	push   r11
  406f61:	53                   	push   rbx
  406f62:	45 52                	rex.RB push r10
  406f64:	54                   	push   rsp
  406f65:	49                   	rex.WB
  406f66:	4f                   	rex.WRXB
  406f67:	4e 53                	rex.WRX push rbx
  406f69:	00 00                	add    BYTE PTR [rax],al
  406f6b:	00 06                	add    BYTE PTR [rsi],al
	...
  406f75:	01 00                	add    DWORD PTR [rax],eax
  406f77:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406f7a:	2a 07                	sub    al,BYTE PTR [rdi]
  406f7c:	03 00                	add    eax,DWORD PTR [rax]
  406f7e:	00 00                	add    BYTE PTR [rax],al
  406f80:	05 00 00 00 00       	add    eax,0x0
  406f85:	00 00                	add    BYTE PTR [rax],al
  406f87:	00 00                	add    BYTE PTR [rax],al
  406f89:	01 00                	add    DWORD PTR [rax],eax
  406f8b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406f8e:	21 08                	and    DWORD PTR [rax],ecx
  406f90:	00 00                	add    BYTE PTR [rax],al
  406f92:	00 00                	add    BYTE PTR [rax],al
  406f94:	16                   	(bad)  
	...
  406f9d:	01 00                	add    DWORD PTR [rax],eax
  406f9f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406fa2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  406fa5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  406fac:	65 
  406fad:	5f                   	pop    rdi
  406fae:	70 6f                	jo     40701f <__TMC_END__+0x2ff7>
  406fb0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  406fb7:	00 06                	add    BYTE PTR [rsi],al
	...
  406fc1:	01 00                	add    DWORD PTR [rax],eax
  406fc3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  406fc6:	2a 06                	sub    al,BYTE PTR [rsi]
  406fc8:	12 00                	adc    al,BYTE PTR [rax]
  406fca:	00 00                	add    BYTE PTR [rax],al
  406fcc:	11 00                	adc    DWORD PTR [rax],eax
  406fce:	00 00                	add    BYTE PTR [rax],al
  406fd0:	00 00                	add    BYTE PTR [rax],al
  406fd2:	00 00                	add    BYTE PTR [rax],al
  406fd4:	00 01                	add    BYTE PTR [rcx],al
  406fd6:	00 00                	add    BYTE PTR [rax],al
  406fd8:	47                   	rex.RXB
  406fd9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  406fdd:	61                   	(bad)  
  406fde:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  406fe1:	72 65                	jb     407048 <__TMC_END__+0x3020>
  406fe3:	61                   	(bad)  
  406fe4:	6c                   	ins    BYTE PTR es:[rdi],dx
  406fe5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  406fec:	0b 00                	or     eax,DWORD PTR [rax]
  406fee:	00 00                	add    BYTE PTR [rax],al
  406ff0:	10 00                	adc    BYTE PTR [rax],al
  406ff2:	00 00                	add    BYTE PTR [rax],al
  406ff4:	00 01                	add    BYTE PTR [rcx],al
  406ff6:	00 00                	add    BYTE PTR [rax],al
  406ff8:	47                   	rex.RXB
  406ff9:	41 24 01             	rex.B and al,0x1
  406ffc:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  406fff:	30 39                	xor    BYTE PTR [rcx],bh
  407001:	32 00                	xor    al,BYTE PTR [rax]
  407003:	00 40 10             	add    BYTE PTR [rax+0x10],al
  407006:	40 00 00             	rex add BYTE PTR [rax],al
  407009:	00 00                	add    BYTE PTR [rax],al
  40700b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40700e:	40 00 00             	rex add BYTE PTR [rax],al
  407011:	00 00                	add    BYTE PTR [rax],al
  407013:	00 20                	add    BYTE PTR [rax],ah
	...
  40701d:	01 00                	add    DWORD PTR [rax],eax
  40701f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407022:	24 05                	and    al,0x5
  407024:	72 75                	jb     40709b <__TMC_END__+0x3073>
  407026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407027:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407028:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40702f:	20 31                	and    BYTE PTR [rcx],dh
  407031:	32 2e                	xor    ch,BYTE PTR [rsi]
  407033:	32 2e                	xor    ch,BYTE PTR [rsi]
  407035:	31 20                	xor    DWORD PTR [rax],esp
  407037:	32 30                	xor    dh,BYTE PTR [rax]
  407039:	32 32                	xor    dh,BYTE PTR [rdx]
  40703b:	31 31                	xor    DWORD PTR [rcx],esi
  40703d:	32 31                	xor    dh,BYTE PTR [rcx]
  40703f:	00 20                	add    BYTE PTR [rax],ah
	...
  407049:	01 00                	add    DWORD PTR [rax],eax
  40704b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40704e:	24 05                	and    al,0x5
  407050:	61                   	(bad)  
  407051:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407052:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407053:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407054:	62                   	(bad)  
  407055:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40705c:	31 32                	xor    DWORD PTR [rdx],esi
  40705e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  407061:	31 20                	xor    DWORD PTR [rax],esp
  407063:	32 30                	xor    dh,BYTE PTR [rax]
  407065:	32 32                	xor    dh,BYTE PTR [rdx]
  407067:	30 38                	xor    BYTE PTR [rax],bh
  407069:	31 39                	xor    DWORD PTR [rcx],edi
  40706b:	00 19                	add    BYTE PTR [rcx],bl
	...
  407075:	01 00                	add    DWORD PTR [rax],eax
  407077:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40707a:	24 05                	and    al,0x5
  40707c:	70 6c                	jo     4070ea <__TMC_END__+0x30c2>
  40707e:	75 67                	jne    4070e7 <__TMC_END__+0x30bf>
  407080:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  407087:	3a 20                	cmp    ah,BYTE PTR [rax]
  407089:	61                   	(bad)  
  40708a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40708b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40708c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40708d:	62                   	(bad)  
  40708e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40709d:	01 00                	add    DWORD PTR [rax],eax
  40709f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4070a2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  4070a5:	57                   	push   rdi
  4070a6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  4070aa:	00 00                	add    BYTE PTR [rax],al
  4070ac:	06                   	(bad)  
	...
  4070b5:	01 00                	add    DWORD PTR [rax],eax
  4070b7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4070ba:	2a 02                	sub    al,BYTE PTR [rdx]
  4070bc:	03 00                	add    eax,DWORD PTR [rax]
  4070be:	00 00                	add    BYTE PTR [rax],al
  4070c0:	0f 00 00             	sldt   WORD PTR [rax]
  4070c3:	00 00                	add    BYTE PTR [rax],al
  4070c5:	00 00                	add    BYTE PTR [rax],al
  4070c7:	00 00                	add    BYTE PTR [rax],al
  4070c9:	01 00                	add    DWORD PTR [rax],eax
  4070cb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4070ce:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  4070d1:	61                   	(bad)  
  4070d2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4070d5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4070d9:	68 00 00 13 00       	push   0x130000
  4070de:	00 00                	add    BYTE PTR [rax],al
  4070e0:	00 00                	add    BYTE PTR [rax],al
  4070e2:	00 00                	add    BYTE PTR [rax],al
  4070e4:	00 01                	add    BYTE PTR [rcx],al
  4070e6:	00 00                	add    BYTE PTR [rax],al
  4070e8:	47                   	rex.RXB
  4070e9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  4070ed:	5f                   	pop    rdi
  4070ee:	70 72                	jo     407162 <__TMC_END__+0x313a>
  4070f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4070f1:	74 65                	je     407158 <__TMC_END__+0x3130>
  4070f3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4070f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4070f8:	00 08                	add    BYTE PTR [rax],cl
  4070fa:	00 00                	add    BYTE PTR [rax],al
  4070fc:	0d 00 00 00 00       	or     eax,0x0
  407101:	00 00                	add    BYTE PTR [rax],al
  407103:	00 00                	add    BYTE PTR [rax],al
  407105:	01 00                	add    DWORD PTR [rax],eax
  407107:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40710a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40710d:	52                   	push   rdx
  40710e:	54                   	push   rsp
  40710f:	49                   	rex.WB
  407110:	46 59                	rex.RX pop rcx
  407112:	00 ff                	add    bh,bh
  407114:	00 00                	add    BYTE PTR [rax],al
  407116:	00 00                	add    BYTE PTR [rax],al
  407118:	16                   	(bad)  
	...
  407121:	01 00                	add    DWORD PTR [rax],eax
  407123:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407126:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407129:	49                   	rex.WB
  40712a:	42                   	rex.X
  40712b:	43 58                	rex.XB pop r8
  40712d:	58                   	pop    rax
  40712e:	5f                   	pop    rdi
  40712f:	41 53                	push   r11
  407131:	53                   	push   rbx
  407132:	45 52                	rex.RB push r10
  407134:	54                   	push   rsp
  407135:	49                   	rex.WB
  407136:	4f                   	rex.WRXB
  407137:	4e 53                	rex.WRX push rbx
  407139:	00 00                	add    BYTE PTR [rax],al
  40713b:	00 06                	add    BYTE PTR [rsi],al
	...
  407145:	01 00                	add    DWORD PTR [rax],eax
  407147:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40714a:	2a 07                	sub    al,BYTE PTR [rdi]
  40714c:	03 00                	add    eax,DWORD PTR [rax]
  40714e:	00 00                	add    BYTE PTR [rax],al
  407150:	05 00 00 00 00       	add    eax,0x0
  407155:	00 00                	add    BYTE PTR [rax],al
  407157:	00 00                	add    BYTE PTR [rax],al
  407159:	01 00                	add    DWORD PTR [rax],eax
  40715b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40715e:	21 08                	and    DWORD PTR [rax],ecx
  407160:	00 00                	add    BYTE PTR [rax],al
  407162:	00 00                	add    BYTE PTR [rax],al
  407164:	16                   	(bad)  
	...
  40716d:	01 00                	add    DWORD PTR [rax],eax
  40716f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407172:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  407175:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  40717c:	65 
  40717d:	5f                   	pop    rdi
  40717e:	70 6f                	jo     4071ef <__TMC_END__+0x31c7>
  407180:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  407187:	00 06                	add    BYTE PTR [rsi],al
	...
  407191:	01 00                	add    DWORD PTR [rax],eax
  407193:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407196:	2a 06                	sub    al,BYTE PTR [rsi]
  407198:	12 00                	adc    al,BYTE PTR [rax]
  40719a:	00 00                	add    BYTE PTR [rax],al
  40719c:	11 00                	adc    DWORD PTR [rax],eax
  40719e:	00 00                	add    BYTE PTR [rax],al
  4071a0:	00 00                	add    BYTE PTR [rax],al
  4071a2:	00 00                	add    BYTE PTR [rax],al
  4071a4:	00 01                	add    BYTE PTR [rcx],al
  4071a6:	00 00                	add    BYTE PTR [rax],al
  4071a8:	47                   	rex.RXB
  4071a9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  4071ad:	61                   	(bad)  
  4071ae:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4071b1:	72 65                	jb     407218 <__TMC_END__+0x31f0>
  4071b3:	61                   	(bad)  
  4071b4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4071b5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  4071bc:	0b 00                	or     eax,DWORD PTR [rax]
  4071be:	00 00                	add    BYTE PTR [rax],al
  4071c0:	10 00                	adc    BYTE PTR [rax],al
  4071c2:	00 00                	add    BYTE PTR [rax],al
  4071c4:	00 01                	add    BYTE PTR [rcx],al
  4071c6:	00 00                	add    BYTE PTR [rax],al
  4071c8:	47                   	rex.RXB
  4071c9:	41 24 01             	rex.B and al,0x1
  4071cc:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  4071cf:	30 39                	xor    BYTE PTR [rcx],bh
  4071d1:	32 00                	xor    al,BYTE PTR [rax]
  4071d3:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4071d6:	40 00 00             	rex add BYTE PTR [rax],al
  4071d9:	00 00                	add    BYTE PTR [rax],al
  4071db:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4071de:	40 00 00             	rex add BYTE PTR [rax],al
  4071e1:	00 00                	add    BYTE PTR [rax],al
  4071e3:	00 20                	add    BYTE PTR [rax],ah
	...
  4071ed:	01 00                	add    DWORD PTR [rax],eax
  4071ef:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4071f2:	24 05                	and    al,0x5
  4071f4:	72 75                	jb     40726b <__TMC_END__+0x3243>
  4071f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4071f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4071f8:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  4071ff:	20 31                	and    BYTE PTR [rcx],dh
  407201:	32 2e                	xor    ch,BYTE PTR [rsi]
  407203:	32 2e                	xor    ch,BYTE PTR [rsi]
  407205:	31 20                	xor    DWORD PTR [rax],esp
  407207:	32 30                	xor    dh,BYTE PTR [rax]
  407209:	32 32                	xor    dh,BYTE PTR [rdx]
  40720b:	31 31                	xor    DWORD PTR [rcx],esi
  40720d:	32 31                	xor    dh,BYTE PTR [rcx]
  40720f:	00 20                	add    BYTE PTR [rax],ah
	...
  407219:	01 00                	add    DWORD PTR [rax],eax
  40721b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40721e:	24 05                	and    al,0x5
  407220:	61                   	(bad)  
  407221:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407222:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407223:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407224:	62                   	(bad)  
  407225:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40722c:	31 32                	xor    DWORD PTR [rdx],esi
  40722e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  407231:	31 20                	xor    DWORD PTR [rax],esp
  407233:	32 30                	xor    dh,BYTE PTR [rax]
  407235:	32 32                	xor    dh,BYTE PTR [rdx]
  407237:	30 38                	xor    BYTE PTR [rax],bh
  407239:	31 39                	xor    DWORD PTR [rcx],edi
  40723b:	00 19                	add    BYTE PTR [rcx],bl
	...
  407245:	01 00                	add    DWORD PTR [rax],eax
  407247:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40724a:	24 05                	and    al,0x5
  40724c:	70 6c                	jo     4072ba <__TMC_END__+0x3292>
  40724e:	75 67                	jne    4072b7 <__TMC_END__+0x328f>
  407250:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  407257:	3a 20                	cmp    ah,BYTE PTR [rax]
  407259:	61                   	(bad)  
  40725a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40725b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40725c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40725d:	62                   	(bad)  
  40725e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40726d:	01 00                	add    DWORD PTR [rax],eax
  40726f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407272:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  407275:	57                   	push   rdi
  407276:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40727a:	00 00                	add    BYTE PTR [rax],al
  40727c:	06                   	(bad)  
	...
  407285:	01 00                	add    DWORD PTR [rax],eax
  407287:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40728a:	2a 02                	sub    al,BYTE PTR [rdx]
  40728c:	03 00                	add    eax,DWORD PTR [rax]
  40728e:	00 00                	add    BYTE PTR [rax],al
  407290:	0f 00 00             	sldt   WORD PTR [rax]
  407293:	00 00                	add    BYTE PTR [rax],al
  407295:	00 00                	add    BYTE PTR [rax],al
  407297:	00 00                	add    BYTE PTR [rax],al
  407299:	01 00                	add    DWORD PTR [rax],eax
  40729b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40729e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  4072a1:	61                   	(bad)  
  4072a2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4072a5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4072a9:	68 00 00 13 00       	push   0x130000
  4072ae:	00 00                	add    BYTE PTR [rax],al
  4072b0:	00 00                	add    BYTE PTR [rax],al
  4072b2:	00 00                	add    BYTE PTR [rax],al
  4072b4:	00 01                	add    BYTE PTR [rcx],al
  4072b6:	00 00                	add    BYTE PTR [rax],al
  4072b8:	47                   	rex.RXB
  4072b9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  4072bd:	5f                   	pop    rdi
  4072be:	70 72                	jo     407332 <__TMC_END__+0x330a>
  4072c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4072c1:	74 65                	je     407328 <__TMC_END__+0x3300>
  4072c3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4072c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4072c8:	00 08                	add    BYTE PTR [rax],cl
  4072ca:	00 00                	add    BYTE PTR [rax],al
  4072cc:	0d 00 00 00 00       	or     eax,0x0
  4072d1:	00 00                	add    BYTE PTR [rax],al
  4072d3:	00 00                	add    BYTE PTR [rax],al
  4072d5:	01 00                	add    DWORD PTR [rax],eax
  4072d7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4072da:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  4072dd:	52                   	push   rdx
  4072de:	54                   	push   rsp
  4072df:	49                   	rex.WB
  4072e0:	46 59                	rex.RX pop rcx
  4072e2:	00 ff                	add    bh,bh
  4072e4:	00 00                	add    BYTE PTR [rax],al
  4072e6:	00 00                	add    BYTE PTR [rax],al
  4072e8:	16                   	(bad)  
	...
  4072f1:	01 00                	add    DWORD PTR [rax],eax
  4072f3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4072f6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  4072f9:	49                   	rex.WB
  4072fa:	42                   	rex.X
  4072fb:	43 58                	rex.XB pop r8
  4072fd:	58                   	pop    rax
  4072fe:	5f                   	pop    rdi
  4072ff:	41 53                	push   r11
  407301:	53                   	push   rbx
  407302:	45 52                	rex.RB push r10
  407304:	54                   	push   rsp
  407305:	49                   	rex.WB
  407306:	4f                   	rex.WRXB
  407307:	4e 53                	rex.WRX push rbx
  407309:	00 00                	add    BYTE PTR [rax],al
  40730b:	00 06                	add    BYTE PTR [rsi],al
	...
  407315:	01 00                	add    DWORD PTR [rax],eax
  407317:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40731a:	2a 07                	sub    al,BYTE PTR [rdi]
  40731c:	03 00                	add    eax,DWORD PTR [rax]
  40731e:	00 00                	add    BYTE PTR [rax],al
  407320:	05 00 00 00 00       	add    eax,0x0
  407325:	00 00                	add    BYTE PTR [rax],al
  407327:	00 00                	add    BYTE PTR [rax],al
  407329:	01 00                	add    DWORD PTR [rax],eax
  40732b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40732e:	21 08                	and    DWORD PTR [rax],ecx
  407330:	00 00                	add    BYTE PTR [rax],al
  407332:	00 00                	add    BYTE PTR [rax],al
  407334:	16                   	(bad)  
	...
  40733d:	01 00                	add    DWORD PTR [rax],eax
  40733f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407342:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  407345:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  40734c:	65 
  40734d:	5f                   	pop    rdi
  40734e:	70 6f                	jo     4073bf <__TMC_END__+0x3397>
  407350:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  407357:	00 06                	add    BYTE PTR [rsi],al
	...
  407361:	01 00                	add    DWORD PTR [rax],eax
  407363:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407366:	2a 06                	sub    al,BYTE PTR [rsi]
  407368:	12 00                	adc    al,BYTE PTR [rax]
  40736a:	00 00                	add    BYTE PTR [rax],al
  40736c:	11 00                	adc    DWORD PTR [rax],eax
  40736e:	00 00                	add    BYTE PTR [rax],al
  407370:	00 00                	add    BYTE PTR [rax],al
  407372:	00 00                	add    BYTE PTR [rax],al
  407374:	00 01                	add    BYTE PTR [rcx],al
  407376:	00 00                	add    BYTE PTR [rax],al
  407378:	47                   	rex.RXB
  407379:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  40737d:	61                   	(bad)  
  40737e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407381:	72 65                	jb     4073e8 <__TMC_END__+0x33c0>
  407383:	61                   	(bad)  
  407384:	6c                   	ins    BYTE PTR es:[rdi],dx
  407385:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  40738c:	0b 00                	or     eax,DWORD PTR [rax]
  40738e:	00 00                	add    BYTE PTR [rax],al
  407390:	10 00                	adc    BYTE PTR [rax],al
  407392:	00 00                	add    BYTE PTR [rax],al
  407394:	00 01                	add    BYTE PTR [rcx],al
  407396:	00 00                	add    BYTE PTR [rax],al
  407398:	47                   	rex.RXB
  407399:	41 24 01             	rex.B and al,0x1
  40739c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40739f:	30 39                	xor    BYTE PTR [rcx],bh
  4073a1:	32 00                	xor    al,BYTE PTR [rax]
  4073a3:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4073a6:	40 00 00             	rex add BYTE PTR [rax],al
  4073a9:	00 00                	add    BYTE PTR [rax],al
  4073ab:	00 40 10             	add    BYTE PTR [rax+0x10],al
  4073ae:	40 00 00             	rex add BYTE PTR [rax],al
  4073b1:	00 00                	add    BYTE PTR [rax],al
  4073b3:	00 20                	add    BYTE PTR [rax],ah
	...
  4073bd:	01 00                	add    DWORD PTR [rax],eax
  4073bf:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4073c2:	24 05                	and    al,0x5
  4073c4:	72 75                	jb     40743b <__TMC_END__+0x3413>
  4073c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4073c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4073c8:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  4073cf:	20 31                	and    BYTE PTR [rcx],dh
  4073d1:	32 2e                	xor    ch,BYTE PTR [rsi]
  4073d3:	32 2e                	xor    ch,BYTE PTR [rsi]
  4073d5:	31 20                	xor    DWORD PTR [rax],esp
  4073d7:	32 30                	xor    dh,BYTE PTR [rax]
  4073d9:	32 32                	xor    dh,BYTE PTR [rdx]
  4073db:	31 31                	xor    DWORD PTR [rcx],esi
  4073dd:	32 31                	xor    dh,BYTE PTR [rcx]
  4073df:	00 20                	add    BYTE PTR [rax],ah
	...
  4073e9:	01 00                	add    DWORD PTR [rax],eax
  4073eb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4073ee:	24 05                	and    al,0x5
  4073f0:	61                   	(bad)  
  4073f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4073f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4073f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4073f4:	62                   	(bad)  
  4073f5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  4073fc:	31 32                	xor    DWORD PTR [rdx],esi
  4073fe:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  407401:	31 20                	xor    DWORD PTR [rax],esp
  407403:	32 30                	xor    dh,BYTE PTR [rax]
  407405:	32 32                	xor    dh,BYTE PTR [rdx]
  407407:	30 38                	xor    BYTE PTR [rax],bh
  407409:	31 39                	xor    DWORD PTR [rcx],edi
  40740b:	00 19                	add    BYTE PTR [rcx],bl
	...
  407415:	01 00                	add    DWORD PTR [rax],eax
  407417:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40741a:	24 05                	and    al,0x5
  40741c:	70 6c                	jo     40748a <__TMC_END__+0x3462>
  40741e:	75 67                	jne    407487 <__TMC_END__+0x345f>
  407420:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  407427:	3a 20                	cmp    ah,BYTE PTR [rax]
  407429:	61                   	(bad)  
  40742a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40742b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40742c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40742d:	62                   	(bad)  
  40742e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40743d:	01 00                	add    DWORD PTR [rax],eax
  40743f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407442:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  407445:	57                   	push   rdi
  407446:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40744a:	00 00                	add    BYTE PTR [rax],al
  40744c:	06                   	(bad)  
	...
  407455:	01 00                	add    DWORD PTR [rax],eax
  407457:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40745a:	2a 02                	sub    al,BYTE PTR [rdx]
  40745c:	03 00                	add    eax,DWORD PTR [rax]
  40745e:	00 00                	add    BYTE PTR [rax],al
  407460:	0f 00 00             	sldt   WORD PTR [rax]
  407463:	00 00                	add    BYTE PTR [rax],al
  407465:	00 00                	add    BYTE PTR [rax],al
  407467:	00 00                	add    BYTE PTR [rax],al
  407469:	01 00                	add    DWORD PTR [rax],eax
  40746b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40746e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  407471:	61                   	(bad)  
  407472:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407475:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  407479:	68 00 00 13 00       	push   0x130000
  40747e:	00 00                	add    BYTE PTR [rax],al
  407480:	00 00                	add    BYTE PTR [rax],al
  407482:	00 00                	add    BYTE PTR [rax],al
  407484:	00 01                	add    BYTE PTR [rcx],al
  407486:	00 00                	add    BYTE PTR [rax],al
  407488:	47                   	rex.RXB
  407489:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40748d:	5f                   	pop    rdi
  40748e:	70 72                	jo     407502 <__TMC_END__+0x34da>
  407490:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407491:	74 65                	je     4074f8 <__TMC_END__+0x34d0>
  407493:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407497:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407498:	00 08                	add    BYTE PTR [rax],cl
  40749a:	00 00                	add    BYTE PTR [rax],al
  40749c:	0d 00 00 00 00       	or     eax,0x0
  4074a1:	00 00                	add    BYTE PTR [rax],al
  4074a3:	00 00                	add    BYTE PTR [rax],al
  4074a5:	01 00                	add    DWORD PTR [rax],eax
  4074a7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4074aa:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  4074ad:	52                   	push   rdx
  4074ae:	54                   	push   rsp
  4074af:	49                   	rex.WB
  4074b0:	46 59                	rex.RX pop rcx
  4074b2:	00 ff                	add    bh,bh
  4074b4:	00 00                	add    BYTE PTR [rax],al
  4074b6:	00 00                	add    BYTE PTR [rax],al
  4074b8:	16                   	(bad)  
	...
  4074c1:	01 00                	add    DWORD PTR [rax],eax
  4074c3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4074c6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  4074c9:	49                   	rex.WB
  4074ca:	42                   	rex.X
  4074cb:	43 58                	rex.XB pop r8
  4074cd:	58                   	pop    rax
  4074ce:	5f                   	pop    rdi
  4074cf:	41 53                	push   r11
  4074d1:	53                   	push   rbx
  4074d2:	45 52                	rex.RB push r10
  4074d4:	54                   	push   rsp
  4074d5:	49                   	rex.WB
  4074d6:	4f                   	rex.WRXB
  4074d7:	4e 53                	rex.WRX push rbx
  4074d9:	00 00                	add    BYTE PTR [rax],al
  4074db:	00 06                	add    BYTE PTR [rsi],al
	...
  4074e5:	01 00                	add    DWORD PTR [rax],eax
  4074e7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4074ea:	2a 07                	sub    al,BYTE PTR [rdi]
  4074ec:	03 00                	add    eax,DWORD PTR [rax]
  4074ee:	00 00                	add    BYTE PTR [rax],al
  4074f0:	05 00 00 00 00       	add    eax,0x0
  4074f5:	00 00                	add    BYTE PTR [rax],al
  4074f7:	00 00                	add    BYTE PTR [rax],al
  4074f9:	01 00                	add    DWORD PTR [rax],eax
  4074fb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4074fe:	21 08                	and    DWORD PTR [rax],ecx
  407500:	00 00                	add    BYTE PTR [rax],al
  407502:	00 00                	add    BYTE PTR [rax],al
  407504:	16                   	(bad)  
	...
  40750d:	01 00                	add    DWORD PTR [rax],eax
  40750f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407512:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  407515:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  40751c:	65 
  40751d:	5f                   	pop    rdi
  40751e:	70 6f                	jo     40758f <__TMC_END__+0x3567>
  407520:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  407527:	00 06                	add    BYTE PTR [rsi],al
	...
  407531:	01 00                	add    DWORD PTR [rax],eax
  407533:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407536:	2a 06                	sub    al,BYTE PTR [rsi]
  407538:	12 00                	adc    al,BYTE PTR [rax]
  40753a:	00 00                	add    BYTE PTR [rax],al
  40753c:	11 00                	adc    DWORD PTR [rax],eax
  40753e:	00 00                	add    BYTE PTR [rax],al
  407540:	00 00                	add    BYTE PTR [rax],al
  407542:	00 00                	add    BYTE PTR [rax],al
  407544:	00 01                	add    BYTE PTR [rcx],al
  407546:	00 00                	add    BYTE PTR [rax],al
  407548:	47                   	rex.RXB
  407549:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  40754d:	61                   	(bad)  
  40754e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407551:	72 65                	jb     4075b8 <__TMC_END__+0x3590>
  407553:	61                   	(bad)  
  407554:	6c                   	ins    BYTE PTR es:[rdi],dx
  407555:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  40755c:	0b 00                	or     eax,DWORD PTR [rax]
  40755e:	00 00                	add    BYTE PTR [rax],al
  407560:	10 00                	adc    BYTE PTR [rax],al
  407562:	00 00                	add    BYTE PTR [rax],al
  407564:	00 01                	add    BYTE PTR [rcx],al
  407566:	00 00                	add    BYTE PTR [rax],al
  407568:	47                   	rex.RXB
  407569:	41 24 01             	rex.B and al,0x1
  40756c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40756f:	30 39                	xor    BYTE PTR [rcx],bh
  407571:	32 00                	xor    al,BYTE PTR [rax]
  407573:	00 40 10             	add    BYTE PTR [rax+0x10],al
  407576:	40 00 00             	rex add BYTE PTR [rax],al
  407579:	00 00                	add    BYTE PTR [rax],al
  40757b:	00 40 10             	add    BYTE PTR [rax+0x10],al
  40757e:	40 00 00             	rex add BYTE PTR [rax],al
  407581:	00 00                	add    BYTE PTR [rax],al
  407583:	00 20                	add    BYTE PTR [rax],ah
	...
  40758d:	01 00                	add    DWORD PTR [rax],eax
  40758f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407592:	24 05                	and    al,0x5
  407594:	72 75                	jb     40760b <__TMC_END__+0x35e3>
  407596:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407597:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407598:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40759f:	20 31                	and    BYTE PTR [rcx],dh
  4075a1:	32 2e                	xor    ch,BYTE PTR [rsi]
  4075a3:	32 2e                	xor    ch,BYTE PTR [rsi]
  4075a5:	31 20                	xor    DWORD PTR [rax],esp
  4075a7:	32 30                	xor    dh,BYTE PTR [rax]
  4075a9:	32 32                	xor    dh,BYTE PTR [rdx]
  4075ab:	31 31                	xor    DWORD PTR [rcx],esi
  4075ad:	32 31                	xor    dh,BYTE PTR [rcx]
  4075af:	00 20                	add    BYTE PTR [rax],ah
	...
  4075b9:	01 00                	add    DWORD PTR [rax],eax
  4075bb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4075be:	24 05                	and    al,0x5
  4075c0:	61                   	(bad)  
  4075c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4075c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4075c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4075c4:	62                   	(bad)  
  4075c5:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  4075cc:	31 32                	xor    DWORD PTR [rdx],esi
  4075ce:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  4075d1:	31 20                	xor    DWORD PTR [rax],esp
  4075d3:	32 30                	xor    dh,BYTE PTR [rax]
  4075d5:	32 32                	xor    dh,BYTE PTR [rdx]
  4075d7:	30 38                	xor    BYTE PTR [rax],bh
  4075d9:	31 39                	xor    DWORD PTR [rcx],edi
  4075db:	00 19                	add    BYTE PTR [rcx],bl
	...
  4075e5:	01 00                	add    DWORD PTR [rax],eax
  4075e7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4075ea:	24 05                	and    al,0x5
  4075ec:	70 6c                	jo     40765a <__TMC_END__+0x3632>
  4075ee:	75 67                	jne    407657 <__TMC_END__+0x362f>
  4075f0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  4075f7:	3a 20                	cmp    ah,BYTE PTR [rax]
  4075f9:	61                   	(bad)  
  4075fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4075fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4075fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4075fd:	62                   	(bad)  
  4075fe:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  40760d:	01 00                	add    DWORD PTR [rax],eax
  40760f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407612:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  407615:	57                   	push   rdi
  407616:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  40761a:	00 00                	add    BYTE PTR [rax],al
  40761c:	06                   	(bad)  
	...
  407625:	01 00                	add    DWORD PTR [rax],eax
  407627:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40762a:	2a 02                	sub    al,BYTE PTR [rdx]
  40762c:	03 00                	add    eax,DWORD PTR [rax]
  40762e:	00 00                	add    BYTE PTR [rax],al
  407630:	0f 00 00             	sldt   WORD PTR [rax]
  407633:	00 00                	add    BYTE PTR [rax],al
  407635:	00 00                	add    BYTE PTR [rax],al
  407637:	00 00                	add    BYTE PTR [rax],al
  407639:	01 00                	add    DWORD PTR [rax],eax
  40763b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40763e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  407641:	61                   	(bad)  
  407642:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407645:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  407649:	68 00 00 13 00       	push   0x130000
  40764e:	00 00                	add    BYTE PTR [rax],al
  407650:	00 00                	add    BYTE PTR [rax],al
  407652:	00 00                	add    BYTE PTR [rax],al
  407654:	00 01                	add    BYTE PTR [rcx],al
  407656:	00 00                	add    BYTE PTR [rax],al
  407658:	47                   	rex.RXB
  407659:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40765d:	5f                   	pop    rdi
  40765e:	70 72                	jo     4076d2 <__TMC_END__+0x36aa>
  407660:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407661:	74 65                	je     4076c8 <__TMC_END__+0x36a0>
  407663:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407667:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407668:	00 08                	add    BYTE PTR [rax],cl
  40766a:	00 00                	add    BYTE PTR [rax],al
  40766c:	0d 00 00 00 00       	or     eax,0x0
  407671:	00 00                	add    BYTE PTR [rax],al
  407673:	00 00                	add    BYTE PTR [rax],al
  407675:	01 00                	add    DWORD PTR [rax],eax
  407677:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40767a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40767d:	52                   	push   rdx
  40767e:	54                   	push   rsp
  40767f:	49                   	rex.WB
  407680:	46 59                	rex.RX pop rcx
  407682:	00 ff                	add    bh,bh
  407684:	00 00                	add    BYTE PTR [rax],al
  407686:	00 00                	add    BYTE PTR [rax],al
  407688:	16                   	(bad)  
	...
  407691:	01 00                	add    DWORD PTR [rax],eax
  407693:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407696:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407699:	49                   	rex.WB
  40769a:	42                   	rex.X
  40769b:	43 58                	rex.XB pop r8
  40769d:	58                   	pop    rax
  40769e:	5f                   	pop    rdi
  40769f:	41 53                	push   r11
  4076a1:	53                   	push   rbx
  4076a2:	45 52                	rex.RB push r10
  4076a4:	54                   	push   rsp
  4076a5:	49                   	rex.WB
  4076a6:	4f                   	rex.WRXB
  4076a7:	4e 53                	rex.WRX push rbx
  4076a9:	00 00                	add    BYTE PTR [rax],al
  4076ab:	00 06                	add    BYTE PTR [rsi],al
	...
  4076b5:	01 00                	add    DWORD PTR [rax],eax
  4076b7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4076ba:	2a 07                	sub    al,BYTE PTR [rdi]
  4076bc:	03 00                	add    eax,DWORD PTR [rax]
  4076be:	00 00                	add    BYTE PTR [rax],al
  4076c0:	05 00 00 00 00       	add    eax,0x0
  4076c5:	00 00                	add    BYTE PTR [rax],al
  4076c7:	00 00                	add    BYTE PTR [rax],al
  4076c9:	01 00                	add    DWORD PTR [rax],eax
  4076cb:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4076ce:	21 08                	and    DWORD PTR [rax],ecx
  4076d0:	00 00                	add    BYTE PTR [rax],al
  4076d2:	00 00                	add    BYTE PTR [rax],al
  4076d4:	16                   	(bad)  
	...
  4076dd:	01 00                	add    DWORD PTR [rax],eax
  4076df:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4076e2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  4076e5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  4076ec:	65 
  4076ed:	5f                   	pop    rdi
  4076ee:	70 6f                	jo     40775f <__TMC_END__+0x3737>
  4076f0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  4076f7:	00 06                	add    BYTE PTR [rsi],al
	...
  407701:	01 00                	add    DWORD PTR [rax],eax
  407703:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407706:	2a 06                	sub    al,BYTE PTR [rsi]
  407708:	12 00                	adc    al,BYTE PTR [rax]
  40770a:	00 00                	add    BYTE PTR [rax],al
  40770c:	11 00                	adc    DWORD PTR [rax],eax
  40770e:	00 00                	add    BYTE PTR [rax],al
  407710:	00 00                	add    BYTE PTR [rax],al
  407712:	00 00                	add    BYTE PTR [rax],al
  407714:	00 01                	add    BYTE PTR [rcx],al
  407716:	00 00                	add    BYTE PTR [rax],al
  407718:	47                   	rex.RXB
  407719:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  40771d:	61                   	(bad)  
  40771e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407721:	72 65                	jb     407788 <__TMC_END__+0x3760>
  407723:	61                   	(bad)  
  407724:	6c                   	ins    BYTE PTR es:[rdi],dx
  407725:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  40772c:	0b 00                	or     eax,DWORD PTR [rax]
  40772e:	00 00                	add    BYTE PTR [rax],al
  407730:	10 00                	adc    BYTE PTR [rax],al
  407732:	00 00                	add    BYTE PTR [rax],al
  407734:	00 01                	add    BYTE PTR [rcx],al
  407736:	00 00                	add    BYTE PTR [rax],al
  407738:	47                   	rex.RXB
  407739:	41 24 01             	rex.B and al,0x1
  40773c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40773f:	30 39                	xor    BYTE PTR [rcx],bh
  407741:	32 00                	xor    al,BYTE PTR [rax]
  407743:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  407746:	40 00 00             	rex add BYTE PTR [rax],al
  407749:	00 00                	add    BYTE PTR [rax],al
  40774b:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  40774e:	40 00 00             	rex add BYTE PTR [rax],al
  407751:	00 00                	add    BYTE PTR [rax],al
  407753:	00 20                	add    BYTE PTR [rax],ah
	...
  40775d:	01 00                	add    DWORD PTR [rax],eax
  40775f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407762:	24 05                	and    al,0x5
  407764:	72 75                	jb     4077db <__TMC_END__+0x37b3>
  407766:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407767:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407768:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40776f:	20 31                	and    BYTE PTR [rcx],dh
  407771:	32 2e                	xor    ch,BYTE PTR [rsi]
  407773:	32 2e                	xor    ch,BYTE PTR [rsi]
  407775:	31 20                	xor    DWORD PTR [rax],esp
  407777:	32 30                	xor    dh,BYTE PTR [rax]
  407779:	32 32                	xor    dh,BYTE PTR [rdx]
  40777b:	31 31                	xor    DWORD PTR [rcx],esi
  40777d:	32 31                	xor    dh,BYTE PTR [rcx]
  40777f:	00 20                	add    BYTE PTR [rax],ah
	...
  407789:	01 00                	add    DWORD PTR [rax],eax
  40778b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40778e:	24 05                	and    al,0x5
  407790:	61                   	(bad)  
  407791:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407793:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407794:	62                   	(bad)  
  407795:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40779c:	31 32                	xor    DWORD PTR [rdx],esi
  40779e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  4077a1:	31 20                	xor    DWORD PTR [rax],esp
  4077a3:	32 30                	xor    dh,BYTE PTR [rax]
  4077a5:	32 32                	xor    dh,BYTE PTR [rdx]
  4077a7:	30 38                	xor    BYTE PTR [rax],bh
  4077a9:	31 39                	xor    DWORD PTR [rcx],edi
  4077ab:	00 19                	add    BYTE PTR [rcx],bl
	...
  4077b5:	01 00                	add    DWORD PTR [rax],eax
  4077b7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4077ba:	24 05                	and    al,0x5
  4077bc:	70 6c                	jo     40782a <__TMC_END__+0x3802>
  4077be:	75 67                	jne    407827 <__TMC_END__+0x37ff>
  4077c0:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  4077c7:	3a 20                	cmp    ah,BYTE PTR [rax]
  4077c9:	61                   	(bad)  
  4077ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4077cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4077cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4077cd:	62                   	(bad)  
  4077ce:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  4077dd:	01 00                	add    DWORD PTR [rax],eax
  4077df:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4077e2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  4077e5:	57                   	push   rdi
  4077e6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  4077ea:	00 00                	add    BYTE PTR [rax],al
  4077ec:	06                   	(bad)  
	...
  4077f5:	01 00                	add    DWORD PTR [rax],eax
  4077f7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4077fa:	2a 02                	sub    al,BYTE PTR [rdx]
  4077fc:	03 00                	add    eax,DWORD PTR [rax]
  4077fe:	00 00                	add    BYTE PTR [rax],al
  407800:	0f 00 00             	sldt   WORD PTR [rax]
  407803:	00 00                	add    BYTE PTR [rax],al
  407805:	00 00                	add    BYTE PTR [rax],al
  407807:	00 00                	add    BYTE PTR [rax],al
  407809:	01 00                	add    DWORD PTR [rax],eax
  40780b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40780e:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  407811:	61                   	(bad)  
  407812:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407815:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  407819:	68 00 00 13 00       	push   0x130000
  40781e:	00 00                	add    BYTE PTR [rax],al
  407820:	00 00                	add    BYTE PTR [rax],al
  407822:	00 00                	add    BYTE PTR [rax],al
  407824:	00 01                	add    BYTE PTR [rcx],al
  407826:	00 00                	add    BYTE PTR [rax],al
  407828:	47                   	rex.RXB
  407829:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  40782d:	5f                   	pop    rdi
  40782e:	70 72                	jo     4078a2 <__TMC_END__+0x387a>
  407830:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407831:	74 65                	je     407898 <__TMC_END__+0x3870>
  407833:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407837:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407838:	00 08                	add    BYTE PTR [rax],cl
  40783a:	00 00                	add    BYTE PTR [rax],al
  40783c:	0d 00 00 00 00       	or     eax,0x0
  407841:	00 00                	add    BYTE PTR [rax],al
  407843:	00 00                	add    BYTE PTR [rax],al
  407845:	01 00                	add    DWORD PTR [rax],eax
  407847:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40784a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  40784d:	52                   	push   rdx
  40784e:	54                   	push   rsp
  40784f:	49                   	rex.WB
  407850:	46 59                	rex.RX pop rcx
  407852:	00 ff                	add    bh,bh
  407854:	00 00                	add    BYTE PTR [rax],al
  407856:	00 00                	add    BYTE PTR [rax],al
  407858:	16                   	(bad)  
	...
  407861:	01 00                	add    DWORD PTR [rax],eax
  407863:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407866:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407869:	49                   	rex.WB
  40786a:	42                   	rex.X
  40786b:	43 58                	rex.XB pop r8
  40786d:	58                   	pop    rax
  40786e:	5f                   	pop    rdi
  40786f:	41 53                	push   r11
  407871:	53                   	push   rbx
  407872:	45 52                	rex.RB push r10
  407874:	54                   	push   rsp
  407875:	49                   	rex.WB
  407876:	4f                   	rex.WRXB
  407877:	4e 53                	rex.WRX push rbx
  407879:	00 00                	add    BYTE PTR [rax],al
  40787b:	00 06                	add    BYTE PTR [rsi],al
	...
  407885:	01 00                	add    DWORD PTR [rax],eax
  407887:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40788a:	2a 07                	sub    al,BYTE PTR [rdi]
  40788c:	03 00                	add    eax,DWORD PTR [rax]
  40788e:	00 00                	add    BYTE PTR [rax],al
  407890:	05 00 00 00 00       	add    eax,0x0
  407895:	00 00                	add    BYTE PTR [rax],al
  407897:	00 00                	add    BYTE PTR [rax],al
  407899:	01 00                	add    DWORD PTR [rax],eax
  40789b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40789e:	21 08                	and    DWORD PTR [rax],ecx
  4078a0:	00 00                	add    BYTE PTR [rax],al
  4078a2:	00 00                	add    BYTE PTR [rax],al
  4078a4:	16                   	(bad)  
	...
  4078ad:	01 00                	add    DWORD PTR [rax],eax
  4078af:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4078b2:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  4078b5:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  4078bc:	65 
  4078bd:	5f                   	pop    rdi
  4078be:	70 6f                	jo     40792f <__TMC_END__+0x3907>
  4078c0:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  4078c7:	00 06                	add    BYTE PTR [rsi],al
	...
  4078d1:	01 00                	add    DWORD PTR [rax],eax
  4078d3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4078d6:	2a 06                	sub    al,BYTE PTR [rsi]
  4078d8:	12 00                	adc    al,BYTE PTR [rax]
  4078da:	00 00                	add    BYTE PTR [rax],al
  4078dc:	11 00                	adc    DWORD PTR [rax],eax
  4078de:	00 00                	add    BYTE PTR [rax],al
  4078e0:	00 00                	add    BYTE PTR [rax],al
  4078e2:	00 00                	add    BYTE PTR [rax],al
  4078e4:	00 01                	add    BYTE PTR [rcx],al
  4078e6:	00 00                	add    BYTE PTR [rax],al
  4078e8:	47                   	rex.RXB
  4078e9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  4078ed:	61                   	(bad)  
  4078ee:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4078f1:	72 65                	jb     407958 <__TMC_END__+0x3930>
  4078f3:	61                   	(bad)  
  4078f4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4078f5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  4078fc:	0b 00                	or     eax,DWORD PTR [rax]
  4078fe:	00 00                	add    BYTE PTR [rax],al
  407900:	10 00                	adc    BYTE PTR [rax],al
  407902:	00 00                	add    BYTE PTR [rax],al
  407904:	00 01                	add    BYTE PTR [rcx],al
  407906:	00 00                	add    BYTE PTR [rax],al
  407908:	47                   	rex.RXB
  407909:	41 24 01             	rex.B and al,0x1
  40790c:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  40790f:	30 39                	xor    BYTE PTR [rcx],bh
  407911:	32 00                	xor    al,BYTE PTR [rax]
  407913:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  407916:	40 00 00             	rex add BYTE PTR [rax],al
  407919:	00 00                	add    BYTE PTR [rax],al
  40791b:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  40791e:	40 00 00             	rex add BYTE PTR [rax],al
  407921:	00 00                	add    BYTE PTR [rax],al
  407923:	00 20                	add    BYTE PTR [rax],ah
	...
  40792d:	01 00                	add    DWORD PTR [rax],eax
  40792f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407932:	24 05                	and    al,0x5
  407934:	72 75                	jb     4079ab <__TMC_END__+0x3983>
  407936:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407937:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407938:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  40793f:	20 31                	and    BYTE PTR [rcx],dh
  407941:	32 2e                	xor    ch,BYTE PTR [rsi]
  407943:	32 2e                	xor    ch,BYTE PTR [rsi]
  407945:	31 20                	xor    DWORD PTR [rax],esp
  407947:	32 30                	xor    dh,BYTE PTR [rax]
  407949:	32 32                	xor    dh,BYTE PTR [rdx]
  40794b:	31 31                	xor    DWORD PTR [rcx],esi
  40794d:	32 31                	xor    dh,BYTE PTR [rcx]
  40794f:	00 20                	add    BYTE PTR [rax],ah
	...
  407959:	01 00                	add    DWORD PTR [rax],eax
  40795b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40795e:	24 05                	and    al,0x5
  407960:	61                   	(bad)  
  407961:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407962:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407963:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407964:	62                   	(bad)  
  407965:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  40796c:	31 32                	xor    DWORD PTR [rdx],esi
  40796e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  407971:	31 20                	xor    DWORD PTR [rax],esp
  407973:	32 30                	xor    dh,BYTE PTR [rax]
  407975:	32 32                	xor    dh,BYTE PTR [rdx]
  407977:	30 38                	xor    BYTE PTR [rax],bh
  407979:	31 39                	xor    DWORD PTR [rcx],edi
  40797b:	00 19                	add    BYTE PTR [rcx],bl
	...
  407985:	01 00                	add    DWORD PTR [rax],eax
  407987:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  40798a:	24 05                	and    al,0x5
  40798c:	70 6c                	jo     4079fa <__TMC_END__+0x39d2>
  40798e:	75 67                	jne    4079f7 <__TMC_END__+0x39cf>
  407990:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  407997:	3a 20                	cmp    ah,BYTE PTR [rax]
  407999:	61                   	(bad)  
  40799a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40799b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40799c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40799d:	62                   	(bad)  
  40799e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  4079ad:	01 00                	add    DWORD PTR [rax],eax
  4079af:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4079b2:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  4079b5:	57                   	push   rdi
  4079b6:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  4079ba:	00 00                	add    BYTE PTR [rax],al
  4079bc:	06                   	(bad)  
	...
  4079c5:	01 00                	add    DWORD PTR [rax],eax
  4079c7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4079ca:	2a 02                	sub    al,BYTE PTR [rdx]
  4079cc:	03 00                	add    eax,DWORD PTR [rax]
  4079ce:	00 00                	add    BYTE PTR [rax],al
  4079d0:	0f 00 00             	sldt   WORD PTR [rax]
  4079d3:	00 00                	add    BYTE PTR [rax],al
  4079d5:	00 00                	add    BYTE PTR [rax],al
  4079d7:	00 00                	add    BYTE PTR [rax],al
  4079d9:	01 00                	add    DWORD PTR [rax],eax
  4079db:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  4079de:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  4079e1:	61                   	(bad)  
  4079e2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4079e5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4079e9:	68 00 00 13 00       	push   0x130000
  4079ee:	00 00                	add    BYTE PTR [rax],al
  4079f0:	00 00                	add    BYTE PTR [rax],al
  4079f2:	00 00                	add    BYTE PTR [rax],al
  4079f4:	00 01                	add    BYTE PTR [rcx],al
  4079f6:	00 00                	add    BYTE PTR [rax],al
  4079f8:	47                   	rex.RXB
  4079f9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  4079fd:	5f                   	pop    rdi
  4079fe:	70 72                	jo     407a72 <__TMC_END__+0x3a4a>
  407a00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407a01:	74 65                	je     407a68 <__TMC_END__+0x3a40>
  407a03:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407a07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407a08:	00 08                	add    BYTE PTR [rax],cl
  407a0a:	00 00                	add    BYTE PTR [rax],al
  407a0c:	0d 00 00 00 00       	or     eax,0x0
  407a11:	00 00                	add    BYTE PTR [rax],al
  407a13:	00 00                	add    BYTE PTR [rax],al
  407a15:	01 00                	add    DWORD PTR [rax],eax
  407a17:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407a1a:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  407a1d:	52                   	push   rdx
  407a1e:	54                   	push   rsp
  407a1f:	49                   	rex.WB
  407a20:	46 59                	rex.RX pop rcx
  407a22:	00 ff                	add    bh,bh
  407a24:	00 00                	add    BYTE PTR [rax],al
  407a26:	00 00                	add    BYTE PTR [rax],al
  407a28:	16                   	(bad)  
	...
  407a31:	01 00                	add    DWORD PTR [rax],eax
  407a33:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407a36:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407a39:	49                   	rex.WB
  407a3a:	42                   	rex.X
  407a3b:	43 58                	rex.XB pop r8
  407a3d:	58                   	pop    rax
  407a3e:	5f                   	pop    rdi
  407a3f:	41 53                	push   r11
  407a41:	53                   	push   rbx
  407a42:	45 52                	rex.RB push r10
  407a44:	54                   	push   rsp
  407a45:	49                   	rex.WB
  407a46:	4f                   	rex.WRXB
  407a47:	4e 53                	rex.WRX push rbx
  407a49:	00 00                	add    BYTE PTR [rax],al
  407a4b:	00 06                	add    BYTE PTR [rsi],al
	...
  407a55:	01 00                	add    DWORD PTR [rax],eax
  407a57:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407a5a:	2a 07                	sub    al,BYTE PTR [rdi]
  407a5c:	03 00                	add    eax,DWORD PTR [rax]
  407a5e:	00 00                	add    BYTE PTR [rax],al
  407a60:	05 00 00 00 00       	add    eax,0x0
  407a65:	00 00                	add    BYTE PTR [rax],al
  407a67:	00 00                	add    BYTE PTR [rax],al
  407a69:	01 00                	add    DWORD PTR [rax],eax
  407a6b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407a6e:	21 08                	and    DWORD PTR [rax],ecx
  407a70:	00 00                	add    BYTE PTR [rax],al
  407a72:	00 00                	add    BYTE PTR [rax],al
  407a74:	16                   	(bad)  
	...
  407a7d:	01 00                	add    DWORD PTR [rax],eax
  407a7f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407a82:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  407a85:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  407a8c:	65 
  407a8d:	5f                   	pop    rdi
  407a8e:	70 6f                	jo     407aff <__TMC_END__+0x3ad7>
  407a90:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  407a97:	00 06                	add    BYTE PTR [rsi],al
	...
  407aa1:	01 00                	add    DWORD PTR [rax],eax
  407aa3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407aa6:	2a 06                	sub    al,BYTE PTR [rsi]
  407aa8:	12 00                	adc    al,BYTE PTR [rax]
  407aaa:	00 00                	add    BYTE PTR [rax],al
  407aac:	11 00                	adc    DWORD PTR [rax],eax
  407aae:	00 00                	add    BYTE PTR [rax],al
  407ab0:	00 00                	add    BYTE PTR [rax],al
  407ab2:	00 00                	add    BYTE PTR [rax],al
  407ab4:	00 01                	add    BYTE PTR [rcx],al
  407ab6:	00 00                	add    BYTE PTR [rax],al
  407ab8:	47                   	rex.RXB
  407ab9:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  407abd:	61                   	(bad)  
  407abe:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407ac1:	72 65                	jb     407b28 <__TMC_END__+0x3b00>
  407ac3:	61                   	(bad)  
  407ac4:	6c                   	ins    BYTE PTR es:[rdi],dx
  407ac5:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  407acc:	0b 00                	or     eax,DWORD PTR [rax]
  407ace:	00 00                	add    BYTE PTR [rax],al
  407ad0:	10 00                	adc    BYTE PTR [rax],al
  407ad2:	00 00                	add    BYTE PTR [rax],al
  407ad4:	00 01                	add    BYTE PTR [rcx],al
  407ad6:	00 00                	add    BYTE PTR [rax],al
  407ad8:	47                   	rex.RXB
  407ad9:	41 24 01             	rex.B and al,0x1
  407adc:	33 70 31             	xor    esi,DWORD PTR [rax+0x31]
  407adf:	30 39                	xor    BYTE PTR [rcx],bh
  407ae1:	32 00                	xor    al,BYTE PTR [rax]
  407ae3:	00 70 10             	add    BYTE PTR [rax+0x10],dh
  407ae6:	40 00 00             	rex add BYTE PTR [rax],al
  407ae9:	00 00                	add    BYTE PTR [rax],al
  407aeb:	00 75 10             	add    BYTE PTR [rbp+0x10],dh
  407aee:	40 00 00             	rex add BYTE PTR [rax],al
  407af1:	00 00                	add    BYTE PTR [rax],al
  407af3:	00 20                	add    BYTE PTR [rax],ah
	...
  407afd:	01 00                	add    DWORD PTR [rax],eax
  407aff:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407b02:	24 05                	and    al,0x5
  407b04:	72 75                	jb     407b7b <__TMC_END__+0x3b53>
  407b06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b08:	69 6e 67 20 67 63 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63636720
  407b0f:	20 31                	and    BYTE PTR [rcx],dh
  407b11:	32 2e                	xor    ch,BYTE PTR [rsi]
  407b13:	32 2e                	xor    ch,BYTE PTR [rsi]
  407b15:	31 20                	xor    DWORD PTR [rax],esp
  407b17:	32 30                	xor    dh,BYTE PTR [rax]
  407b19:	32 32                	xor    dh,BYTE PTR [rdx]
  407b1b:	31 31                	xor    DWORD PTR [rcx],esi
  407b1d:	32 31                	xor    dh,BYTE PTR [rcx]
  407b1f:	00 20                	add    BYTE PTR [rax],ah
	...
  407b29:	01 00                	add    DWORD PTR [rax],eax
  407b2b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407b2e:	24 05                	and    al,0x5
  407b30:	61                   	(bad)  
  407b31:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b32:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407b34:	62                   	(bad)  
  407b35:	69 6e 20 67 63 63 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20636367
  407b3c:	31 32                	xor    DWORD PTR [rdx],esi
  407b3e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  407b41:	31 20                	xor    DWORD PTR [rax],esp
  407b43:	32 30                	xor    dh,BYTE PTR [rax]
  407b45:	32 32                	xor    dh,BYTE PTR [rdx]
  407b47:	30 38                	xor    BYTE PTR [rax],bh
  407b49:	31 39                	xor    DWORD PTR [rcx],edi
  407b4b:	00 19                	add    BYTE PTR [rcx],bl
	...
  407b55:	01 00                	add    DWORD PTR [rax],eax
  407b57:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407b5a:	24 05                	and    al,0x5
  407b5c:	70 6c                	jo     407bca <__TMC_END__+0x3ba2>
  407b5e:	75 67                	jne    407bc7 <__TMC_END__+0x3b9f>
  407b60:	69 6e 20 6e 61 6d 65 	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  407b67:	3a 20                	cmp    ah,BYTE PTR [rax]
  407b69:	61                   	(bad)  
  407b6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b6b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407b6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407b6d:	62                   	(bad)  
  407b6e:	69 6e 00 00 00 00 0b 	imul   ebp,DWORD PTR [rsi+0x0],0xb000000
	...
  407b7d:	01 00                	add    DWORD PTR [rax],eax
  407b7f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407b82:	2a 47 4f             	sub    al,BYTE PTR [rdi+0x4f]
  407b85:	57                   	push   rdi
  407b86:	00 6c 05 2a          	add    BYTE PTR [rbp+rax*1+0x2a],ch
  407b8a:	00 00                	add    BYTE PTR [rax],al
  407b8c:	06                   	(bad)  
	...
  407b95:	01 00                	add    DWORD PTR [rax],eax
  407b97:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407b9a:	2a 02                	sub    al,BYTE PTR [rdx]
  407b9c:	03 00                	add    eax,DWORD PTR [rax]
  407b9e:	00 00                	add    BYTE PTR [rax],al
  407ba0:	0f 00 00             	sldt   WORD PTR [rax]
  407ba3:	00 00                	add    BYTE PTR [rax],al
  407ba5:	00 00                	add    BYTE PTR [rax],al
  407ba7:	00 00                	add    BYTE PTR [rax],al
  407ba9:	01 00                	add    DWORD PTR [rax],eax
  407bab:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407bae:	2b 73 74             	sub    esi,DWORD PTR [rbx+0x74]
  407bb1:	61                   	(bad)  
  407bb2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407bb5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  407bb9:	68 00 00 13 00       	push   0x130000
  407bbe:	00 00                	add    BYTE PTR [rax],al
  407bc0:	00 00                	add    BYTE PTR [rax],al
  407bc2:	00 00                	add    BYTE PTR [rax],al
  407bc4:	00 01                	add    BYTE PTR [rcx],al
  407bc6:	00 00                	add    BYTE PTR [rax],al
  407bc8:	47                   	rex.RXB
  407bc9:	41 2a 63 66          	sub    spl,BYTE PTR [r11+0x66]
  407bcd:	5f                   	pop    rdi
  407bce:	70 72                	jo     407c42 <__TMC_END__+0x3c1a>
  407bd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  407bd1:	74 65                	je     407c38 <__TMC_END__+0x3c10>
  407bd3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407bd7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  407bd8:	00 08                	add    BYTE PTR [rax],cl
  407bda:	00 00                	add    BYTE PTR [rax],al
  407bdc:	0d 00 00 00 00       	or     eax,0x0
  407be1:	00 00                	add    BYTE PTR [rax],al
  407be3:	00 00                	add    BYTE PTR [rax],al
  407be5:	01 00                	add    DWORD PTR [rax],eax
  407be7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407bea:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  407bed:	52                   	push   rdx
  407bee:	54                   	push   rsp
  407bef:	49                   	rex.WB
  407bf0:	46 59                	rex.RX pop rcx
  407bf2:	00 ff                	add    bh,bh
  407bf4:	00 00                	add    BYTE PTR [rax],al
  407bf6:	00 00                	add    BYTE PTR [rax],al
  407bf8:	16                   	(bad)  
	...
  407c01:	01 00                	add    DWORD PTR [rax],eax
  407c03:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407c06:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407c09:	49                   	rex.WB
  407c0a:	42                   	rex.X
  407c0b:	43 58                	rex.XB pop r8
  407c0d:	58                   	pop    rax
  407c0e:	5f                   	pop    rdi
  407c0f:	41 53                	push   r11
  407c11:	53                   	push   rbx
  407c12:	45 52                	rex.RB push r10
  407c14:	54                   	push   rsp
  407c15:	49                   	rex.WB
  407c16:	4f                   	rex.WRXB
  407c17:	4e 53                	rex.WRX push rbx
  407c19:	00 00                	add    BYTE PTR [rax],al
  407c1b:	00 06                	add    BYTE PTR [rsi],al
	...
  407c25:	01 00                	add    DWORD PTR [rax],eax
  407c27:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407c2a:	2a 07                	sub    al,BYTE PTR [rdi]
  407c2c:	03 00                	add    eax,DWORD PTR [rax]
  407c2e:	00 00                	add    BYTE PTR [rax],al
  407c30:	05 00 00 00 00       	add    eax,0x0
  407c35:	00 00                	add    BYTE PTR [rax],al
  407c37:	00 00                	add    BYTE PTR [rax],al
  407c39:	01 00                	add    DWORD PTR [rax],eax
  407c3b:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407c3e:	21 08                	and    DWORD PTR [rax],ecx
  407c40:	00 00                	add    BYTE PTR [rax],al
  407c42:	00 00                	add    BYTE PTR [rax],al
  407c44:	16                   	(bad)  
	...
  407c4d:	01 00                	add    DWORD PTR [rax],eax
  407c4f:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407c52:	2b 6f 6d             	sub    ebp,DWORD PTR [rdi+0x6d]
  407c55:	69 74 5f 66 72 61 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x66],0x656d6172
  407c5c:	65 
  407c5d:	5f                   	pop    rdi
  407c5e:	70 6f                	jo     407ccf <__TMC_END__+0x3ca7>
  407c60:	69 6e 74 65 72 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x7265
  407c67:	00 06                	add    BYTE PTR [rsi],al
	...
  407c71:	01 00                	add    DWORD PTR [rax],eax
  407c73:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407c76:	2a 06                	sub    al,BYTE PTR [rsi]
  407c78:	12 00                	adc    al,BYTE PTR [rax]
  407c7a:	00 00                	add    BYTE PTR [rax],al
  407c7c:	11 00                	adc    DWORD PTR [rax],eax
  407c7e:	00 00                	add    BYTE PTR [rax],al
  407c80:	00 00                	add    BYTE PTR [rax],al
  407c82:	00 00                	add    BYTE PTR [rax],al
  407c84:	00 01                	add    BYTE PTR [rcx],al
  407c86:	00 00                	add    BYTE PTR [rax],al
  407c88:	47                   	rex.RXB
  407c89:	41 21 73 74          	and    DWORD PTR [r11+0x74],esi
  407c8d:	61                   	(bad)  
  407c8e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  407c91:	72 65                	jb     407cf8 <__TMC_END__+0x3cd0>
  407c93:	61                   	(bad)  
  407c94:	6c                   	ins    BYTE PTR es:[rdi],dx
  407c95:	69 67 6e 00 00 00 00 	imul   esp,DWORD PTR [rdi+0x6e],0x0
  407c9c:	0d 00 00 00 10       	or     eax,0x10000000
  407ca1:	00 00                	add    BYTE PTR [rax],al
  407ca3:	00 01                	add    BYTE PTR [rcx],al
  407ca5:	01 00                	add    DWORD PTR [rax],eax
  407ca7:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407caa:	2a 46 4f             	sub    al,BYTE PTR [rsi+0x4f]
  407cad:	52                   	push   rdx
  407cae:	54                   	push   rsp
  407caf:	49                   	rex.WB
  407cb0:	46 59                	rex.RX pop rcx
  407cb2:	00 ff                	add    bh,bh
  407cb4:	00 00                	add    BYTE PTR [rax],al
  407cb6:	00 00                	add    BYTE PTR [rax],al
  407cb8:	70 10                	jo     407cca <__TMC_END__+0x3ca2>
  407cba:	40 00 00             	rex add BYTE PTR [rax],al
  407cbd:	00 00                	add    BYTE PTR [rax],al
  407cbf:	00 75 10             	add    BYTE PTR [rbp+0x10],dh
  407cc2:	40 00 00             	rex add BYTE PTR [rax],al
  407cc5:	00 00                	add    BYTE PTR [rax],al
  407cc7:	00 16                	add    BYTE PTR [rsi],dl
  407cc9:	00 00                	add    BYTE PTR [rax],al
  407ccb:	00 10                	add    BYTE PTR [rax],dl
  407ccd:	00 00                	add    BYTE PTR [rax],al
  407ccf:	00 01                	add    BYTE PTR [rcx],al
  407cd1:	01 00                	add    DWORD PTR [rax],eax
  407cd3:	00 47 41             	add    BYTE PTR [rdi+0x41],al
  407cd6:	2b 47 4c             	sub    eax,DWORD PTR [rdi+0x4c]
  407cd9:	49                   	rex.WB
  407cda:	42                   	rex.X
  407cdb:	43 58                	rex.XB pop r8
  407cdd:	58                   	pop    rax
  407cde:	5f                   	pop    rdi
  407cdf:	41 53                	push   r11
  407ce1:	53                   	push   rbx
  407ce2:	45 52                	rex.RB push r10
  407ce4:	54                   	push   rsp
  407ce5:	49                   	rex.WB
  407ce6:	4f                   	rex.WRXB
  407ce7:	4e 53                	rex.WRX push rbx
  407ce9:	00 00                	add    BYTE PTR [rax],al
  407ceb:	00 70 10             	add    BYTE PTR [rax+0x10],dh
  407cee:	40 00 00             	rex add BYTE PTR [rax],al
  407cf1:	00 00                	add    BYTE PTR [rax],al
  407cf3:	00 75 10             	add    BYTE PTR [rbp+0x10],dh
  407cf6:	40 00 00             	rex add BYTE PTR [rax],al
  407cf9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	26 11 40 00          	es adc DWORD PTR [rax+0x0],eax
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	2a 01                	sub    al,BYTE PTR [rcx]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 01 08 00       	add    eax,0x80100
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 06 00 00 00    	add    BYTE PTR [rip+0x6],al        # 17 <__abi_tag-0x400385>
  11:	1d 4b 00 00 00       	sbb    eax,0x4b
  16:	00 00                	add    BYTE PTR [rax],al
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	26 11 40 00          	es adc DWORD PTR [rax+0x0],eax
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	6d                   	ins    DWORD PTR es:[rdi],dx
	...
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 01                	add    BYTE PTR [rcx],al
  2f:	08 07                	or     BYTE PTR [rdi],al
  31:	5a                   	pop    rdx
  32:	00 00                	add    BYTE PTR [rax],al
  34:	00 01                	add    BYTE PTR [rcx],al
  36:	04 07                	add    al,0x7
  38:	5f                   	pop    rdi
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	00 01                	add    BYTE PTR [rcx],al
  3d:	01 08                	add    DWORD PTR [rax],ecx
  3f:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40:	00 00                	add    BYTE PTR [rax],al
  42:	00 01                	add    BYTE PTR [rcx],al
  44:	02 07                	add    al,BYTE PTR [rdi]
  46:	8a 00                	mov    al,BYTE PTR [rax]
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	01 01                	add    DWORD PTR [rcx],eax
  4c:	06                   	(bad)  
  4d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	00 01                	add    BYTE PTR [rcx],al
  52:	02 05 b2 00 00 00    	add    al,BYTE PTR [rip+0xb2]        # 10a <__abi_tag-0x400292>
  58:	06                   	(bad)  
  59:	04 05                	add    al,0x5
  5b:	69 6e 74 00 01 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080100
  62:	76 00                	jbe    64 <__abi_tag-0x400338>
  64:	00 00                	add    BYTE PTR [rax],al
  66:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
  69:	00 00                	add    BYTE PTR [rax],al
  6b:	02 2d 1b 2e 00 00    	add    ch,BYTE PTR [rip+0x2e1b]        # 2e8c <__abi_tag-0x3fd510>
  71:	00 01                	add    BYTE PTR [rcx],al
  73:	01 06                	add    DWORD PTR [rsi],eax
  75:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  76:	00 00                	add    BYTE PTR [rax],al
  78:	00 07                	add    BYTE PTR [rdi],al
  7a:	72 00                	jb     7c <__abi_tag-0x400320>
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	02 81 00 00 00 03    	add    al,BYTE PTR [rcx+0x3000000]
  84:	1b 14 66             	sbb    edx,DWORD PTR [rsi+riz*2]
  87:	00 00                	add    BYTE PTR [rax],al
  89:	00 08                	add    BYTE PTR [rax],cl
  8b:	9d                   	popf   
  8c:	00 00                	add    BYTE PTR [rax],al
  8e:	00 04 64             	add    BYTE PTR [rsp+riz*2],al
  91:	01 0c 58             	add    DWORD PTR [rax+rbx*2],ecx
  94:	00 00                	add    BYTE PTR [rax],al
  96:	00 a2 00 00 00 09    	add    BYTE PTR [rdx+0x9000000],ah
  9c:	a2 00 00 00 0a 00 0b 	movabs ds:0x79080b000a000000,al
  a3:	08 79 
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	00 0c 71             	add    BYTE PTR [rcx+rsi*2],cl
  aa:	00 00                	add    BYTE PTR [rax],al
  ac:	00 01                	add    BYTE PTR [rcx],al
  ae:	08 05 58 00 00 00    	or     BYTE PTR [rip+0x58],al        # 10c <__abi_tag-0x400290>
  b4:	54                   	push   rsp
  b5:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  b8:	00 00                	add    BYTE PTR [rax],al
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	3f                   	(bad)  
  bd:	00 00                	add    BYTE PTR [rax],al
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	00 00                	add    BYTE PTR [rax],al
  c3:	00 01                	add    BYTE PTR [rcx],al
  c5:	9c                   	pushf  
  c6:	da 00                	fiadd  DWORD PTR [rax]
  c8:	00 00                	add    BYTE PTR [rax],al
  ca:	0d 73 75 6d 00       	or     eax,0x6d7573
  cf:	01 09                	add    DWORD PTR [rcx],ecx
  d1:	09 58 00             	or     DWORD PTR [rax+0x0],ebx
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	02 91 6c 00 0e 6c    	add    dl,BYTE PTR [rcx+0x6c0e006c]
  dc:	00 00                	add    BYTE PTR [rax],al
  de:	00 01                	add    BYTE PTR [rcx],al
  e0:	04 05                	add    al,0x5
  e2:	58                   	pop    rax
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	00 26                	add    BYTE PTR [rsi],ah
  e7:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  ea:	00 00                	add    BYTE PTR [rax],al
  ec:	00 00                	add    BYTE PTR [rax],al
  ee:	2e 00 00             	cs add BYTE PTR [rax],al
  f1:	00 00                	add    BYTE PTR [rax],al
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	00 01                	add    BYTE PTR [rcx],al
  f7:	9c                   	pushf  
  f8:	03 6f 6e             	add    ebp,DWORD PTR [rdi+0x6e]
  fb:	65 00 13             	add    BYTE PTR gs:[rbx],dl
  fe:	7e 00                	jle    100 <__abi_tag-0x40029c>
 100:	00 00                	add    BYTE PTR [rax],al
 102:	02 91 68 03 74 77    	add    dl,BYTE PTR [rcx+0x77740368]
 108:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 109:	00 21                	add    BYTE PTR [rcx],ah
 10b:	7e 00                	jle    10d <__abi_tag-0x40028f>
 10d:	00 00                	add    BYTE PTR [rax],al
 10f:	02 91 60 04 00 00    	add    dl,BYTE PTR [rcx+0x460]
 115:	00 00                	add    BYTE PTR [rax],al
 117:	2f                   	(bad)  
 118:	7e 00                	jle    11a <__abi_tag-0x400282>
 11a:	00 00                	add    BYTE PTR [rax],al
 11c:	02 91 58 04 55 00    	add    dl,BYTE PTR [rcx+0x550458]
 122:	00 00                	add    BYTE PTR [rax],al
 124:	3f                   	(bad)  
 125:	7e 00                	jle    127 <__abi_tag-0x400275>
 127:	00 00                	add    BYTE PTR [rax],al
 129:	02                   	.byte 0x2
 12a:	91                   	xchg   ecx,eax
 12b:	50                   	push   rax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    DWORD PTR [rax+rax*1],esp
   3:	0b 0b                	or     ecx,DWORD PTR [rbx]
   5:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   8:	0e                   	(bad)  
   9:	00 00                	add    BYTE PTR [rax],al
   b:	02 16                	add    dl,BYTE PTR [rsi]
   d:	00 03                	add    BYTE PTR [rbx],al
   f:	0e                   	(bad)  
  10:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  12:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  14:	39 0b                	cmp    DWORD PTR [rbx],ecx
  16:	49 13 00             	adc    rax,QWORD PTR [r8]
  19:	00 03                	add    BYTE PTR [rbx],al
  1b:	05 00 03 08 3a       	add    eax,0x3a080300
  20:	21 01                	and    DWORD PTR [rcx],eax
  22:	3b 21                	cmp    esp,DWORD PTR [rcx]
  24:	04 39                	add    al,0x39
  26:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  29:	02 18                	add    bl,BYTE PTR [rax]
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	04 05                	add    al,0x5
  2f:	00 03                	add    BYTE PTR [rbx],al
  31:	0e                   	(bad)  
  32:	3a 21                	cmp    ah,BYTE PTR [rcx]
  34:	01 3b                	add    DWORD PTR [rbx],edi
  36:	21 04 39             	and    DWORD PTR [rcx+rdi*1],eax
  39:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  3c:	02 18                	add    bl,BYTE PTR [rax]
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	05 11 01 25 0e       	add    eax,0xe250111
  45:	13 0b                	adc    ecx,DWORD PTR [rbx]
  47:	03 1f                	add    ebx,DWORD PTR [rdi]
  49:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
  4b:	11 01                	adc    DWORD PTR [rcx],eax
  4d:	12 07                	adc    al,BYTE PTR [rdi]
  4f:	10 17                	adc    BYTE PTR [rdi],dl
  51:	00 00                	add    BYTE PTR [rax],al
  53:	06                   	(bad)  
  54:	24 00                	and    al,0x0
  56:	0b 0b                	or     ecx,DWORD PTR [rbx]
  58:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  5b:	08 00                	or     BYTE PTR [rax],al
  5d:	00 07                	add    BYTE PTR [rdi],al
  5f:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
  63:	00 00                	add    BYTE PTR [rax],al
  65:	08 2e                	or     BYTE PTR [rsi],ch
  67:	01 3f                	add    DWORD PTR [rdi],edi
  69:	19 03                	sbb    DWORD PTR [rbx],eax
  6b:	0e                   	(bad)  
  6c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  6e:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270bad <__TMC_END__+0x18e6cb85>
  74:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
  78:	01 13                	add    DWORD PTR [rbx],edx
  7a:	00 00                	add    BYTE PTR [rax],al
  7c:	09 05 00 49 13 00    	or     DWORD PTR [rip+0x134900],eax        # 134982 <__abi_tag-0x2cba1a>
  82:	00 0a                	add    BYTE PTR [rdx],cl
  84:	18 00                	sbb    BYTE PTR [rax],al
  86:	00 00                	add    BYTE PTR [rax],al
  88:	0b 0f                	or     ecx,DWORD PTR [rdi]
  8a:	00 0b                	add    BYTE PTR [rbx],cl
  8c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	0c 2e                	or     al,0x2e
  93:	01 3f                	add    DWORD PTR [rdi],edi
  95:	19 03                	sbb    DWORD PTR [rbx],eax
  97:	0e                   	(bad)  
  98:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  9a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  9c:	39 0b                	cmp    DWORD PTR [rbx],ecx
  9e:	49 13 11             	adc    rdx,QWORD PTR [r9]
  a1:	01 12                	add    DWORD PTR [rdx],edx
  a3:	07                   	(bad)  
  a4:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
  a9:	13 00                	adc    eax,DWORD PTR [rax]
  ab:	00 0d 34 00 03 08    	add    BYTE PTR [rip+0x8030034],cl        # 80300e5 <__TMC_END__+0x7c2c0bd>
  b1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  b5:	39 0b                	cmp    DWORD PTR [rbx],ecx
  b7:	49 13 02             	adc    rax,QWORD PTR [r10]
  ba:	18 00                	sbb    BYTE PTR [rax],al
  bc:	00 0e                	add    BYTE PTR [rsi],cl
  be:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  c1:	19 03                	sbb    DWORD PTR [rbx],eax
  c3:	0e                   	(bad)  
  c4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  c6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
  ca:	27                   	(bad)  
  cb:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  ce:	11 01                	adc    DWORD PTR [rcx],eax
  d0:	12 07                	adc    al,BYTE PTR [rdi]
  d2:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
  d6:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	7e 00                	jle    2 <__abi_tag-0x40039a>
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 45       	add    eax,0x45000800
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	01 01                	add    DWORD PTR [rcx],eax
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)  
  21:	04 00                	add    al,0x0
  23:	00 00                	add    BYTE PTR [rax],al
  25:	00 a5 00 00 00 ea    	add    BYTE PTR [rbp-0x16000000],ah
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 fc                	add    ah,bh
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 02                	add    BYTE PTR [rdx],al
  33:	01 1f                	add    DWORD PTR [rdi],ebx
  35:	02 0f                	add    cl,BYTE PTR [rdi]
  37:	05 90 00 00 00       	add    eax,0x90
  3c:	01 90 00 00 00 01    	add    DWORD PTR [rax+0x1000000],edx
  42:	09 01                	or     DWORD PTR [rcx],eax
  44:	00 00                	add    BYTE PTR [rax],al
  46:	02 11                	add    dl,BYTE PTR [rcx]
  48:	01 00                	add    DWORD PTR [rax],eax
  4a:	00 02                	add    BYTE PTR [rdx],al
  4c:	20 01                	and    BYTE PTR [rcx],al
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	03 05 45 00 09 02    	add    eax,DWORD PTR [rip+0x2090045]        # 209009b <__TMC_END__+0x1c8c073>
  56:	26 11 40 00          	es adc DWORD PTR [rax+0x0],eax
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	15 05 10 08 3d       	adc    eax,0x3d081005
  63:	05 16 ba 05 1e       	add    eax,0x1e05ba16
  68:	66 05 01 67          	add    ax,0x6701
  6c:	05 0c 30 05 0f       	add    eax,0xf05300c
  71:	83 05 05 08 ad 05 0c 	add    DWORD PTR [rip+0x5ad0805],0xc        # 5ad087d <__TMC_END__+0x56cc855>
  78:	08 3d 05 01 59 02    	or     BYTE PTR [rip+0x2590105],bh        # 2590183 <__TMC_END__+0x218c15b>
  7e:	02 00                	add    al,BYTE PTR [rax]
  80:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	74 68                	je     6a <__abi_tag-0x400332>
   2:	72 65                	jb     69 <__abi_tag-0x400333>
   4:	65 00 47 4e          	add    BYTE PTR gs:[rdi+0x4e],al
   8:	55                   	push   rbp
   9:	20 43 31             	and    BYTE PTR [rbx+0x31],al
   c:	37                   	(bad)  
   d:	20 31                	and    BYTE PTR [rcx],dh
   f:	32 2e                	xor    ch,BYTE PTR [rsi]
  11:	32 2e                	xor    ch,BYTE PTR [rsi]
  13:	31 20                	xor    DWORD PTR [rax],esp
  15:	32 30                	xor    dh,BYTE PTR [rax]
  17:	32 32                	xor    dh,BYTE PTR [rdx]
  19:	31 31                	xor    DWORD PTR [rcx],esi
  1b:	32 31                	xor    dh,BYTE PTR [rcx]
  1d:	20 28                	and    BYTE PTR [rax],ch
  1f:	52                   	push   rdx
  20:	65 64 20 48 61       	gs and BYTE PTR fs:[rax+0x61],cl
  25:	74 20                	je     47 <__abi_tag-0x400355>
  27:	31 32                	xor    DWORD PTR [rdx],esi
  29:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  2c:	31 2d 34 29 20 2d    	xor    DWORD PTR [rip+0x2d202934],ebp        # 2d202966 <__TMC_END__+0x2cdfe93e>
  32:	6d                   	ins    DWORD PTR es:[rdi],dx
  33:	74 75                	je     aa <__abi_tag-0x4002f2>
  35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  36:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  3c:	72 69                	jb     a7 <__abi_tag-0x4002f5>
  3e:	63 20                	movsxd esp,DWORD PTR [rax]
  40:	2d 6d 61 72 63       	sub    eax,0x6372616d
  45:	68 3d 78 38 36       	push   0x3638783d
  4a:	2d 36 34 20 2d       	sub    eax,0x2d203436
  4f:	67 20 2d 4f 30 00 66 	and    BYTE PTR [eip+0x6600304f],ch        # 660030a5 <__TMC_END__+0x65bff07d>
  56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  57:	75 72                	jne    cb <__abi_tag-0x4002d1>
  59:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
  5d:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  61:	73 69                	jae    cc <__abi_tag-0x4002d0>
  63:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  65:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  6a:	74 00                	je     6c <__abi_tag-0x400330>
  6c:	61                   	(bad)  
  6d:	64 64 34 00          	fs fs xor al,0x0
  71:	6d                   	ins    DWORD PTR es:[rdi],dx
  72:	61                   	(bad)  
  73:	69 6e 00 6c 6f 6e 67 	imul   ebp,DWORD PTR [rsi+0x0],0x676e6f6c
  7a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  7d:	74 00                	je     7f <__abi_tag-0x40031d>
  7f:	5f                   	pop    rdi
  80:	5f                   	pop    rdi
  81:	75 69                	jne    ec <__abi_tag-0x4002b0>
  83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  84:	74 36                	je     bc <__abi_tag-0x4002e0>
  86:	34 5f                	xor    al,0x5f
  88:	74 00                	je     8a <__abi_tag-0x400312>
  8a:	73 68                	jae    f4 <__abi_tag-0x4002a8>
  8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  8d:	72 74                	jb     103 <__abi_tag-0x400299>
  8f:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  92:	73 69                	jae    fd <__abi_tag-0x40029f>
  94:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  96:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  9b:	74 00                	je     9d <__abi_tag-0x4002ff>
  9d:	70 72                	jo     111 <__abi_tag-0x40028b>
  9f:	69 6e 74 66 00 75 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e750066
  a6:	73 69                	jae    111 <__abi_tag-0x40028b>
  a8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  aa:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  af:	61                   	(bad)  
  b0:	72 00                	jb     b2 <__abi_tag-0x4002ea>
  b2:	73 68                	jae    11c <__abi_tag-0x400280>
  b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b5:	72 74                	jb     12b <__abi_tag-0x400271>
  b7:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  ba:	74 00                	je     bc <__abi_tag-0x4002e0>

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)  
   1:	68 6f 6d 65 2f       	push   0x2f656d6f
   6:	68 61 77 6b 69       	push   0x696b7761
   b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   c:	73 77                	jae    85 <__abi_tag-0x400317>
   e:	2f                   	(bad)  
   f:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  12:	65 2f                	gs (bad) 
  14:	75 63                	jne    79 <__abi_tag-0x400323>
  16:	2f                   	(bad)  
  17:	43 53                	rex.XB push r11
  19:	35 31 33 38 2f       	xor    eax,0x2f383331
  1e:	4d 69 6e 69 41 73 73 	imul   r13,QWORD PTR [r14+0x69],0x69737341
  25:	69 
  26:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  28:	6d                   	ins    DWORD PTR es:[rdi],dx
  29:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  2b:	74 48                	je     75 <__abi_tag-0x400327>
  2d:	61                   	(bad)  
  2e:	55                   	push   rbp
  2f:	43 6b 2f 63          	rex.XB imul ebp,DWORD PTR [r15],0x63
  33:	61                   	(bad)  
  34:	6c                   	ins    BYTE PTR es:[rdi],dx
  35:	6c                   	ins    BYTE PTR es:[rdi],dx
  36:	69 6e 67 2d 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f632d
  3d:	76 65                	jbe    a4 <__abi_tag-0x4002f8>
  3f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40:	74 69                	je     ab <__abi_tag-0x4002f1>
  42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  44:	2f                   	(bad)  
  45:	62 75                	(bad)  
  47:	69 6c 64 00 2f 68 6f 	imul   ebp,DWORD PTR [rsp+riz*2+0x0],0x6d6f682f
  4e:	6d 
  4f:	65 2f                	gs (bad) 
  51:	68 61 77 6b 69       	push   0x696b7761
  56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  57:	73 77                	jae    d0 <__abi_tag-0x4002cc>
  59:	2f                   	(bad)  
  5a:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  5d:	65 2f                	gs (bad) 
  5f:	75 63                	jne    c4 <__abi_tag-0x4002d8>
  61:	2f                   	(bad)  
  62:	43 53                	rex.XB push r11
  64:	35 31 33 38 2f       	xor    eax,0x2f383331
  69:	4d 69 6e 69 41 73 73 	imul   r13,QWORD PTR [r14+0x69],0x69737341
  70:	69 
  71:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  73:	6d                   	ins    DWORD PTR es:[rdi],dx
  74:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  76:	74 48                	je     c0 <__abi_tag-0x4002dc>
  78:	61                   	(bad)  
  79:	55                   	push   rbp
  7a:	43 6b 2f 63          	rex.XB imul ebp,DWORD PTR [r15],0x63
  7e:	61                   	(bad)  
  7f:	6c                   	ins    BYTE PTR es:[rdi],dx
  80:	6c                   	ins    BYTE PTR es:[rdi],dx
  81:	69 6e 67 2d 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f632d
  88:	76 65                	jbe    ef <__abi_tag-0x4002ad>
  8a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  8b:	74 69                	je     f6 <__abi_tag-0x4002a6>
  8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  8f:	2f                   	(bad)  
  90:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
  93:	6c                   	ins    BYTE PTR es:[rdi],dx
  94:	69 6e 67 2d 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f632d
  9b:	76 65                	jbe    102 <__abi_tag-0x40029a>
  9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  9e:	74 69                	je     109 <__abi_tag-0x400293>
  a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  a2:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
  a5:	2f                   	(bad)  
  a6:	68 6f 6d 65 2f       	push   0x2f656d6f
  ab:	68 61 77 6b 69       	push   0x696b7761
  b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  b1:	73 77                	jae    12a <__abi_tag-0x400272>
  b3:	2f                   	(bad)  
  b4:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  b7:	65 2f                	gs (bad) 
  b9:	75 63                	jne    11e <__abi_tag-0x40027e>
  bb:	2f                   	(bad)  
  bc:	43 53                	rex.XB push r11
  be:	35 31 33 38 2f       	xor    eax,0x2f383331
  c3:	4d 69 6e 69 41 73 73 	imul   r13,QWORD PTR [r14+0x69],0x69737341
  ca:	69 
  cb:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  cd:	6d                   	ins    DWORD PTR es:[rdi],dx
  ce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  d0:	74 48                	je     11a <__abi_tag-0x400282>
  d2:	61                   	(bad)  
  d3:	55                   	push   rbp
  d4:	43 6b 2f 63          	rex.XB imul ebp,DWORD PTR [r15],0x63
  d8:	61                   	(bad)  
  d9:	6c                   	ins    BYTE PTR es:[rdi],dx
  da:	6c                   	ins    BYTE PTR es:[rdi],dx
  db:	69 6e 67 2d 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f632d
  e2:	76 65                	jbe    149 <__abi_tag-0x400253>
  e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e5:	74 69                	je     150 <__abi_tag-0x40024c>
  e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e9:	00 2f                	add    BYTE PTR [rdi],ch
  eb:	75 73                	jne    160 <__abi_tag-0x40023c>
  ed:	72 2f                	jb     11e <__abi_tag-0x40027e>
  ef:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  f6:	2f                   	(bad)  
  f7:	62                   	(bad)  
  f8:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  ff:	72 
 100:	2f                   	(bad)  
 101:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 108:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
 10c:	65 73 2e             	gs jae 13d <__abi_tag-0x40025f>
 10f:	68 00 73 74 64       	push   0x64747300
 114:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 11b:	74 6e                	je     18b <__abi_tag-0x400211>
 11d:	2e 68 00 73 74 64    	cs push 0x64747300
 123:	69                   	.byte 0x69
 124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 125:	2e                   	cs
 126:	68                   	.byte 0x68
	...
